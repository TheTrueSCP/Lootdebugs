package net.the_goldbeards.lootdebugs.Block.Drinks;

import net.minecraft.core.BlockPos;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.StateDefinition;
import net.minecraft.world.level.block.state.properties.DirectionProperty;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;
import net.the_goldbeards.lootdebugs.util.ModTags;
import org.jetbrains.annotations.Nullable;

public class FlintLockesDelightBlock extends BushBlock {

    public FlintLockesDelightBlock(Properties properties) {
        super(properties);
    }


    private static final DirectionProperty FACING = HorizontalDirectionalBlock.FACING;

    private static final VoxelShape SHAPE_N = Shapes.or(
            Block.box(4.474482308405118, 1.2000000000000002, 7.016129032258064, 5.474482308405118, 6.25, 9.016129032258064),
            Block.box(2.9744823084051184, 4.75, 7.416129032258064, 4.474482308405118, 6.15, 8.616129032258064),
            Block.box(2.4744823084051184, 5.75, 7.516129032258064, 3.4744823084051184, 6.75, 8.516129032258064),
            Block.box(2.9744823084051184, 3.6, 7.516129032258064, 4.474482308405118, 4.75, 8.516129032258064),
            Block.box(2.4623851707375906, 6.209270428453586, 7.466129032258063, 4.462385170737591, 7.609270428453585, 8.566129032258063),
            Block.box(0.8095752540936445, 0.7149562279041333, 7.416129032258064, 2.3095752540936445, 2.714956227904133, 8.616129032258064),
            Block.box(0.3236023084051176, 1.4194399999999998, 7.316129032258065, 2.0236023084051187, 3.66944, 8.716129032258065),
            Block.box(0.07360230840511761, 0.4194399999999998, 7.216129032258063, 1.7736023084051187, 2.66944, 8.816129032258063),
            Block.box(4.837475152454175, 0, 6.669235465961069, 5.837475152454175, 7, 8.66923546596107),
            Block.box(9.837475152454175, 0, 6.669235465961069, 10.837475152454175, 7, 8.66923546596107),
            Block.box(6.837475152454175, 0, 9.66923546596107, 8.837475152454175, 7, 10.66923546596107),
            Block.box(6.837475152454175, 0, 4.669235465961069, 8.837475152454175, 7, 5.669235465961069),
            Block.box(6.974482308405118, 0, 10.016129032258064, 8.974482308405118, 7, 11.016129032258064),
            Block.box(6.974482308405118, 0, 5.016129032258064, 8.974482308405118, 7, 6.016129032258064),
            Block.box(9.974482308405118, 0, 7.016129032258064, 10.974482308405118, 7, 9.016129032258064),
            Block.box(4.974482308405118, 0, 7.116129032258064, 5.974482308405118, 7, 8.916129032258064),
            Block.box(5.974482308405118, 0.10000000000000009, 6.016129032258064, 9.974482308405118, 1.1, 10.016129032258064),
            Block.box(6.874482308405119, 6.25, 4.816129032258065, 9.074482308405118, 7.25, 6.316129032258065),
            Block.box(6.874482308405119, 2, 4.816129032258065, 9.074482308405118, 3.25, 5.816129032258065),
            Block.box(6.874482308405119, 0, 4.816129032258065, 9.074482308405118, 1.25, 5.816129032258065),
            Block.box(6.874482308405119, 0, 10.216129032258065, 9.074482308405118, 1.25, 11.216129032258065),
            Block.box(6.874482308405119, 2, 10.216129032258065, 9.074482308405118, 3.25, 11.216129032258065),
            Block.box(6.874482308405119, 6.25, 9.716129032258065, 9.074482308405118, 7.25, 11.216129032258065),
            Block.box(9.526070204370523, 6.250000000000001, 7.258298514380648, 11.026070204370523, 7.250000000000001, 9.458298514380648),
            Block.box(10.026070204370523, 2.000000000000001, 7.258298514380648, 11.026070204370523, 3.250000000000001, 9.458298514380648),
            Block.box(10.026070204370523, 8.881784197001252e-16, 7.258298514380648, 11.026070204370523, 1.2500000000000009, 9.458298514380648),
            Block.box(4.626070204370523, 8.881784197001252e-16, 7.258298514380648, 5.626070204370523, 1.2500000000000009, 9.458298514380648),
            Block.box(4.626070204370523, 2.000000000000001, 7.258298514380648, 5.626070204370523, 3.250000000000001, 9.458298514380648),
            Block.box(4.626070204370523, 6.250000000000001, 7.258298514380648, 6.126070204370523, 7.250000000000001, 9.458298514380648),
            Block.box(9.674482308405118, 6.25, 6.916129032258064, 11.174482308405118, 7.25, 9.116129032258064),
            Block.box(10.174482308405118, 2, 6.916129032258064, 11.174482308405118, 3.25, 9.116129032258064),
            Block.box(10.174482308405118, 0, 6.916129032258064, 11.174482308405118, 1.25, 9.116129032258064),
            Block.box(4.774482308405119, 0, 6.916129032258064, 5.774482308405119, 1.25, 9.116129032258064),
            Block.box(4.774482308405119, 2, 6.916129032258064, 5.774482308405119, 3.25, 9.116129032258064),
            Block.box(4.774482308405119, 6.25, 7.016129032258064, 6.274482308405119, 7.25, 9.016129032258064),
            Block.box(9.537475152454176, 6.250000000000001, 6.56923546596107, 11.037475152454176, 7.250000000000001, 8.769235465961069),
            Block.box(10.037475152454176, 2.000000000000001, 6.56923546596107, 11.037475152454176, 3.250000000000001, 8.769235465961069),
            Block.box(10.037475152454176, 8.881784197001252e-16, 6.56923546596107, 11.037475152454176, 1.2500000000000009, 8.769235465961069),
            Block.box(4.637475152454176, 8.881784197001252e-16, 6.56923546596107, 5.637475152454176, 1.2500000000000009, 8.769235465961069),
            Block.box(4.637475152454176, 2.000000000000001, 6.56923546596107, 5.637475152454176, 3.250000000000001, 8.769235465961069),
            Block.box(4.637475152454176, 6.250000000000001, 6.56923546596107, 6.137475152454176, 7.250000000000001, 8.769235465961069),
            Block.box(7.474482308405118, 2.125, 10.466129032258065, 8.474482308405118, 3.125, 11.466129032258065),
            Block.box(7.337475152454175, 2.125000000000001, 10.11923546596107, 8.337475152454175, 3.125000000000001, 11.11923546596107),
            Block.box(7.326070204370522, 2.125000000000001, 4.90829851438065, 8.326070204370522, 3.125000000000001, 5.90829851438065),
            Block.box(7.474482308405118, 2.125, 4.566129032258065, 8.474482308405118, 3.125, 5.566129032258065),
            Block.box(10.287475152454176, 2.125000000000001, 7.169235465961069, 11.287475152454176, 3.125000000000001, 8.16923546596107),
            Block.box(7.337475152454175, 2.125000000000001, 4.21923546596107, 8.337475152454175, 3.125000000000001, 5.21923546596107),
            Block.box(7.326070204370522, 0.125, 4.90829851438065, 8.326070204370522, 1.125, 5.90829851438065),
            Block.box(7.474482308405118, 0.125, 4.566129032258065, 8.474482308405118, 1.125, 5.566129032258065),
            Block.box(7.337475152454175, 0.125, 4.21923546596107, 8.337475152454175, 1.125, 5.21923546596107),
            Block.box(4.524482308405119, 0.125, 7.516129032258064, 5.524482308405119, 1.125, 8.516129032258064),
            Block.box(10.287475152454176, 0.125, 7.169235465961069, 11.287475152454176, 1.125, 8.16923546596107),
            Block.box(7.337475152454175, 0.125, 10.11923546596107, 8.337475152454175, 1.125, 11.11923546596107),
            Block.box(7.474482308405118, 0.125, 10.466129032258065, 8.474482308405118, 1.125, 11.466129032258065),
            Block.box(10.874482308405119, 0.2250000000000001, 7.391129032258064, 11.874482308405119, 2.625, 8.641129032258064),
            Block.box(10.974482308405118, 2.625, 7.291129032258064, 11.974482308405118, 3.625, 8.741129032258064),
            Block.box(10.974482308405118, 0.125, 7.291129032258064, 11.974482308405118, 1.125, 8.741129032258064),
            Block.box(10.624482308405119, 3.625, 7.516129032258064, 11.624482308405119, 5.125, 8.516129032258064),
            Block.box(10.624482308405119, 4.225, 7.416129032258064, 11.724482308405118, 5.225, 8.616129032258064),
            Block.box(5.974482308405118, 5, 4.916129032258064, 8.974482308405118, 8, 11.116129032258064),
            Block.box(4.974482308405118, 7, 6.016129032258064, 8.974482308405118, 9, 9.016129032258064),
            Block.box(5.974482308405118, 1, 6.016129032258064, 9.974482308405118, 8, 10.016129032258064)
    );

    private static final VoxelShape SHAPE_S =Shapes.or(
            Block.box(10.5, 1.2, 7, 11.5, 6.25, 9),
            Block.box(11.5, 4.75, 7.4, 13, 6.15, 8.6),
            Block.box(12.5, 5.75, 7.5, 13.5, 6.75, 8.5),
            Block.box(11.5, 3.6, 7.5, 13, 4.75, 8.5),
            Block.box(12.75, 4.7, 7.45, 14.75, 6.1, 8.55),
            Block.box(13.5, 3.1, 7.4, 15, 5.1, 8.6),
            Block.box(13.95088, 1.41944, 7.3, 15.65088, 3.66944, 8.7),
            Block.box(14.20088, 0.41944, 7.2, 15.90088, 2.66944, 8.8),
            Block.box(10, 0, 7, 11, 7, 9),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(10, 0, 7.1, 11, 7, 8.9),
            Block.box(6, 0.1, 6, 10, 1.1, 10),
            Block.box(6.9, 6.25, 9.7, 9.1, 7.25, 11.2),
            Block.box(6.9, 2, 10.2, 9.1, 3.25, 11.2),
            Block.box(6.9, 0, 10.2, 9.1, 1.25, 11.2),
            Block.box(6.9, 0, 4.8, 9.1, 1.25, 5.8),
            Block.box(6.9, 2, 4.8, 9.1, 3.25, 5.8),
            Block.box(6.9, 6.25, 4.8, 9.1, 7.25, 6.3),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 6.9, 11.2, 7.25, 9.1),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 7, 11.2, 7.25, 9),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 6.9, 11.2, 7.25, 9.1),
            Block.box(7.5, 2.125, 4.55, 8.5, 3.125, 5.55),
            Block.box(7.5, 2.125, 4.55, 8.5, 3.125, 5.55),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(4.55, 2.125, 7.5, 5.55, 3.125, 8.5),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(10.45, 0.125, 7.5, 11.45, 1.125, 8.5),
            Block.box(4.55, 0.125, 7.5, 5.55, 1.125, 8.5),
            Block.box(7.5, 0.125, 4.55, 8.5, 1.125, 5.55),
            Block.box(7.5, 0.125, 4.55, 8.5, 1.125, 5.55),
            Block.box(4.1, 0.225, 7.375, 5.1, 2.625, 8.625),
            Block.box(4, 2.625, 7.275, 5, 3.625, 8.725),
            Block.box(4, 0.125, 7.275, 5, 1.125, 8.725),
            Block.box(4.35, 3.625, 7.5, 5.35, 5.125, 8.5),
            Block.box(4.25, 4.225, 7.4, 5.35, 5.225, 8.6),
            Block.box(7, 5, 4.9, 10, 8, 11.1),
            Block.box(7, 7, 7, 11, 9, 10),
            Block.box(6, 1, 6, 10, 8, 10)
    );

    private static final VoxelShape SHAPE_W = Shapes.or(
            Block.box(7.495305568527165, 1.2000000000000002, 10.020823463730899, 9.495305568527165, 6.25, 11.020823463730897),
            Block.box(7.895305568527165, 4.75, 11.020823463730899, 9.095305568527165, 6.15, 12.520823463730899),
            Block.box(7.995305568527165, 5.75, 12.020823463730899, 8.995305568527165, 6.75, 13.020823463730899),
            Block.box(7.995305568527165, 3.6000000000000005, 11.020823463730899, 8.995305568527165, 4.749999999999998, 12.520823463730899),
            Block.box(7.945305568527166, 6.209270479477434, 11.032920654303789, 9.045305568527166, 7.609270479477434, 13.032920654303789),
            Block.box(7.895305568527165, 0.7149562010102484, 13.18573044963821, 9.095305568527166, 2.7149562010102475, 14.68573044963821),
            Block.box(7.795305568527166, 1.4194449134545275, 13.471700307793691, 9.195305568527166, 3.6694449134545266, 15.17170030779369),
            Block.box(7.695305568527166, 0.4194449134545275, 13.721700307793691, 9.295305568527166, 2.6694449134545266, 15.42170030779369),
            Block.box(7.14841207421677, 0, 9.657830589864016, 9.14841207421677, 7, 10.657830589864016),
            Block.box(7.14841207421677, 0, 4.657830589864016, 9.14841207421677, 7, 5.657830589864016),
            Block.box(10.14841207421677, 0, 6.657830589864016, 11.14841207421677, 7, 8.657830589864016),
            Block.box(5.14841207421677, 0, 6.657830589864016, 6.14841207421677, 7, 8.657830589864016),
            Block.box(10.495305568527165, 0, 6.520823463730899, 11.495305568527165, 7, 8.520823463730899),
            Block.box(5.495305568527165, 0, 6.520823463730899, 6.495305568527165, 7, 8.520823463730899),
            Block.box(7.495305568527165, 0, 4.520823463730899, 9.495305568527165, 7, 5.520823463730899),
            Block.box(7.595305568527165, 0, 9.520823463730899, 9.395305568527164, 7, 10.520823463730899),
            Block.box(6.495305568527165, 0.10000000000000009, 5.520823463730899, 10.495305568527165, 1.1, 9.520823463730899),
            Block.box(5.295305568527166, 6.25, 6.420823463730899, 6.795305568527166, 7.25, 8.620823463730899),
            Block.box(5.295305568527166, 2, 6.420823463730899, 6.295305568527166, 3.25, 8.620823463730899),
            Block.box(5.295305568527166, 0, 6.420823463730899, 6.295305568527166, 1.25, 8.620823463730899),
            Block.box(10.695305568527164, 0, 6.420823463730899, 11.695305568527164, 1.25, 8.620823463730899),
            Block.box(10.695305568527164, 2, 6.420823463730899, 11.695305568527164, 3.25, 8.620823463730899),
            Block.box(10.195305568527164, 6.25, 6.420823463730899, 11.695305568527164, 7.25, 8.620823463730899),
            Block.box(7.737474978663151, 6.25, 4.46923553794767, 9.93747497866315, 7.25, 5.96923553794767),
            Block.box(7.737474978663151, 2, 4.46923553794767, 9.93747497866315, 3.25, 5.46923553794767),
            Block.box(7.737474978663151, 0, 4.46923553794767, 9.93747497866315, 1.25, 5.46923553794767),
            Block.box(7.737474978663151, 0, 9.869235537947668, 9.93747497866315, 1.25, 10.869235537947668),
            Block.box(7.737474978663151, 2, 9.869235537947668, 9.93747497866315, 3.25, 10.869235537947668),
            Block.box(7.737474978663151, 6.25, 9.369235537947668, 9.93747497866315, 7.25, 10.869235537947668),
            Block.box(7.395305568527165, 6.25, 4.3208234637309, 9.595305568527165, 7.25, 5.8208234637309),
            Block.box(7.395305568527165, 2, 4.3208234637309, 9.595305568527165, 3.25, 5.3208234637309),
            Block.box(7.395305568527165, 0, 4.3208234637309, 9.595305568527165, 1.25, 5.3208234637309),
            Block.box(7.395305568527165, 0, 9.720823463730898, 9.595305568527165, 1.25, 10.720823463730898),
            Block.box(7.395305568527165, 2, 9.720823463730898, 9.595305568527165, 3.25, 10.720823463730898),
            Block.box(7.495305568527165, 6.25, 9.220823463730898, 9.495305568527165, 7.25, 10.720823463730898),
            Block.box(7.04841207421677, 6.25, 4.457830589864017, 9.24841207421677, 7.25, 5.957830589864017),
            Block.box(7.04841207421677, 2, 4.457830589864017, 9.24841207421677, 3.25, 5.457830589864017),
            Block.box(7.04841207421677, 0, 4.457830589864017, 9.24841207421677, 1.25, 5.457830589864017),
            Block.box(7.04841207421677, 0, 9.857830589864015, 9.24841207421677, 1.25, 10.857830589864015),
            Block.box(7.04841207421677, 2, 9.857830589864015, 9.24841207421677, 3.25, 10.857830589864015),
            Block.box(7.04841207421677, 6.25, 9.357830589864015, 9.24841207421677, 7.25, 10.857830589864015),
            Block.box(10.945305568527164, 2.125, 7.020823463730899, 11.945305568527164, 3.125, 8.020823463730897),
            Block.box(10.59841207421677, 2.125, 7.157830589864014, 11.59841207421677, 3.125, 8.157830589864012),
            Block.box(5.38747497866315, 2.125, 7.169235537947671, 6.38747497866315, 3.125, 8.169235537947669),
            Block.box(5.045305568527166, 2.125, 7.020823463730901, 6.045305568527166, 3.125, 8.020823463730899),
            Block.box(7.64841207421677, 2.125, 4.207830589864017, 8.648412074216768, 3.125, 5.207830589864017),
            Block.box(4.698412074216771, 2.125, 7.157830589864018, 5.698412074216771, 3.125, 8.157830589864016),
            Block.box(5.38747497866315, 0.125, 7.169235537947671, 6.38747497866315, 1.125, 8.169235537947669),
            Block.box(5.045305568527166, 0.125, 7.020823463730901, 6.045305568527166, 1.125, 8.020823463730899),
            Block.box(4.698412074216771, 0.125, 7.157830589864018, 5.698412074216771, 1.125, 8.157830589864016),
            Block.box(7.995305568527167, 0.125, 9.970823463730898, 8.995305568527165, 1.125, 10.970823463730898),
            Block.box(7.64841207421677, 0.125, 4.207830589864017, 8.648412074216768, 1.125, 5.207830589864017),
            Block.box(10.59841207421677, 0.125, 7.157830589864014, 11.59841207421677, 1.125, 8.157830589864012),
            Block.box(10.945305568527164, 0.125, 7.020823463730899, 11.945305568527164, 1.125, 8.020823463730897),
            Block.box(7.870305568527167, 0.2250000000000001, 3.6208234637309005, 9.120305568527165, 2.625, 4.6208234637309005),
            Block.box(7.770305568527167, 2.625, 3.520823463730901, 9.220305568527165, 3.625, 4.520823463730901),
            Block.box(7.770305568527167, 0.125, 3.520823463730901, 9.220305568527165, 1.125, 4.520823463730901),
            Block.box(7.995305568527167, 3.625, 3.8708234637309005, 8.995305568527165, 5.125, 4.8708234637309005),
            Block.box(7.895305568527167, 4.225, 3.770823463730901, 9.095305568527165, 5.225, 4.8708234637309005),
            Block.box(5.395305568527165, 5, 6.520823463730899, 11.595305568527165, 8, 9.520823463730899),
            Block.box(6.495305568527165, 7, 6.520823463730899, 9.495305568527165, 9, 10.520823463730899),
            Block.box(6.495305568527165, 1, 5.520823463730899, 10.495305568527165, 8, 9.520823463730899)
    );



    private static final VoxelShape SHAPE_E =Shapes.or(
            Block.box(7.479176536269101, 1.2000000000000002, 4.995305568527167, 9.479176536269101, 6.25, 5.995305568527165),
            Block.box(7.879176536269101, 4.75, 3.495305568527165, 9.0791765362691, 6.15, 4.995305568527165),
            Block.box(7.979176536269101, 5.75, 2.995305568527165, 8.979176536269101, 6.75, 3.995305568527165),
            Block.box(7.979176536269101, 3.6000000000000005, 3.495305568527165, 8.979176536269101, 4.749999999999998, 4.995305568527165),
            Block.box(7.9291765362691, 6.209270479477434, 2.9832083779542753, 9.0291765362691, 7.609270479477434, 4.983208377954275),
            Block.box(7.8791765362690995, 0.7149562010102484, 1.3303985826198534, 9.0791765362691, 2.7149562010102475, 2.8303985826198534),
            Block.box(7.7791765362691, 1.4194449134545275, 0.8444287244643736, 9.1791765362691, 3.6694449134545266, 2.544428724464373),
            Block.box(7.6791765362691, 0.4194449134545275, 0.5944287244643736, 9.2791765362691, 2.6694449134545266, 2.294428724464373),
            Block.box(7.826070030579496, 0, 5.358298442394048, 9.826070030579496, 7, 6.358298442394048),
            Block.box(7.826070030579496, 0, 10.358298442394048, 9.826070030579496, 7, 11.358298442394048),
            Block.box(5.826070030579496, 0, 7.358298442394048, 6.826070030579496, 7, 9.358298442394048),
            Block.box(10.826070030579496, 0, 7.358298442394048, 11.826070030579496, 7, 9.358298442394048),
            Block.box(5.479176536269101, 0, 7.495305568527165, 6.479176536269101, 7, 9.495305568527165),
            Block.box(10.479176536269101, 0, 7.495305568527165, 11.479176536269101, 7, 9.495305568527165),
            Block.box(7.479176536269101, 0, 10.495305568527165, 9.479176536269101, 7, 11.495305568527165),
            Block.box(7.579176536269102, 0, 5.495305568527165, 9.379176536269101, 7, 6.495305568527165),
            Block.box(6.479176536269101, 0.10000000000000009, 6.495305568527165, 10.479176536269101, 1.1, 10.495305568527165),
            Block.box(10.1791765362691, 6.25, 7.395305568527165, 11.6791765362691, 7.25, 9.595305568527165),
            Block.box(10.6791765362691, 2, 7.395305568527165, 11.6791765362691, 3.25, 9.595305568527165),
            Block.box(10.6791765362691, 0, 7.395305568527165, 11.6791765362691, 1.25, 9.595305568527165),
            Block.box(5.279176536269102, 0, 7.395305568527165, 6.279176536269102, 1.25, 9.595305568527165),
            Block.box(5.279176536269102, 2, 7.395305568527165, 6.279176536269102, 3.25, 9.595305568527165),
            Block.box(5.279176536269102, 6.25, 7.395305568527165, 6.779176536269102, 7.25, 9.595305568527165),
            Block.box(7.0370071261331155, 6.25, 10.046893494310394, 9.237007126133115, 7.25, 11.546893494310394),
            Block.box(7.0370071261331155, 2, 10.546893494310394, 9.237007126133115, 3.25, 11.546893494310394),
            Block.box(7.0370071261331155, 0, 10.546893494310394, 9.237007126133115, 1.25, 11.546893494310394),
            Block.box(7.0370071261331155, 0, 5.146893494310396, 9.237007126133115, 1.25, 6.146893494310396),
            Block.box(7.0370071261331155, 2, 5.146893494310396, 9.237007126133115, 3.25, 6.146893494310396),
            Block.box(7.0370071261331155, 6.25, 5.146893494310396, 9.237007126133115, 7.25, 6.646893494310396),
            Block.box(7.379176536269101, 6.25, 10.195305568527164, 9.5791765362691, 7.25, 11.695305568527164),
            Block.box(7.379176536269101, 2, 10.695305568527164, 9.5791765362691, 3.25, 11.695305568527164),
            Block.box(7.379176536269101, 0, 10.695305568527164, 9.5791765362691, 1.25, 11.695305568527164),
            Block.box(7.379176536269101, 0, 5.295305568527166, 9.5791765362691, 1.25, 6.295305568527166),
            Block.box(7.379176536269101, 2, 5.295305568527166, 9.5791765362691, 3.25, 6.295305568527166),
            Block.box(7.479176536269101, 6.25, 5.295305568527166, 9.479176536269101, 7.25, 6.795305568527166),
            Block.box(7.726070030579496, 6.25, 10.058298442394047, 9.926070030579496, 7.25, 11.558298442394047),
            Block.box(7.726070030579496, 2, 10.558298442394047, 9.926070030579496, 3.25, 11.558298442394047),
            Block.box(7.726070030579496, 0, 10.558298442394047, 9.926070030579496, 1.25, 11.558298442394047),
            Block.box(7.726070030579496, 0, 5.158298442394049, 9.926070030579496, 1.25, 6.158298442394049),
            Block.box(7.726070030579496, 2, 5.158298442394049, 9.926070030579496, 3.25, 6.158298442394049),
            Block.box(7.726070030579496, 6.25, 5.158298442394049, 9.926070030579496, 7.25, 6.658298442394049),
            Block.box(5.029176536269102, 2.125, 7.995305568527167, 6.029176536269102, 3.125, 8.995305568527165),
            Block.box(5.376070030579497, 2.125, 7.858298442394052, 6.376070030579497, 3.125, 8.85829844239405),
            Block.box(10.587007126133116, 2.125, 7.846893494310395, 11.587007126133116, 3.125, 8.846893494310393),
            Block.box(10.9291765362691, 2.125, 7.995305568527165, 11.9291765362691, 3.125, 8.995305568527163),
            Block.box(8.326070030579498, 2.125, 10.808298442394047, 9.326070030579496, 3.125, 11.808298442394047),
            Block.box(11.276070030579495, 2.125, 7.858298442394048, 12.276070030579495, 3.125, 8.858298442394046),
            Block.box(10.587007126133116, 0.125, 7.846893494310395, 11.587007126133116, 1.125, 8.846893494310393),
            Block.box(10.9291765362691, 0.125, 7.995305568527165, 11.9291765362691, 1.125, 8.995305568527163),
            Block.box(11.276070030579495, 0.125, 7.858298442394048, 12.276070030579495, 1.125, 8.858298442394046),
            Block.box(7.979176536269101, 0.125, 5.045305568527166, 8.9791765362691, 1.125, 6.045305568527166),
            Block.box(8.326070030579498, 0.125, 10.808298442394047, 9.326070030579496, 1.125, 11.808298442394047),
            Block.box(5.376070030579497, 0.125, 7.858298442394052, 6.376070030579497, 1.125, 8.85829844239405),
            Block.box(5.029176536269102, 0.125, 7.995305568527167, 6.029176536269102, 1.125, 8.995305568527165),
            Block.box(7.854176536269101, 0.2250000000000001, 11.395305568527164, 9.1041765362691, 2.625, 12.395305568527164),
            Block.box(7.754176536269101, 2.625, 11.495305568527163, 9.204176536269099, 3.625, 12.495305568527163),
            Block.box(7.754176536269101, 0.125, 11.495305568527163, 9.204176536269099, 1.125, 12.495305568527163),
            Block.box(7.979176536269101, 3.625, 11.145305568527164, 8.9791765362691, 5.125, 12.145305568527164),
            Block.box(7.879176536269101, 4.225, 11.145305568527164, 9.079176536269099, 5.225, 12.245305568527163),
            Block.box(5.379176536269101, 5, 6.495305568527165, 11.5791765362691, 8, 9.495305568527165),
            Block.box(7.479176536269101, 7, 5.495305568527165, 10.479176536269101, 9, 9.495305568527165),
            Block.box(6.479176536269101, 1, 6.495305568527165, 10.479176536269101, 8, 10.495305568527165)
    );

    @Override
    public VoxelShape getShape(BlockState state, BlockGetter p_60556_, BlockPos p_60557_, CollisionContext p_60558_) {
        switch (state.getValue(FACING))
        {
            case NORTH:
                return SHAPE_N;

            case EAST:
                return SHAPE_E;

            case WEST:
                return SHAPE_W;

            case SOUTH:
                return SHAPE_S;

            default:
                return SHAPE_N;
        }
    }


    @Nullable
    @Override
    public BlockState getStateForPlacement(BlockPlaceContext context) {
        return this.defaultBlockState().setValue(FACING,context.getHorizontalDirection().getOpposite());
    }

    @Override
    public BlockState rotate(BlockState state, LevelAccessor world, BlockPos pos, Rotation rot) {
        return state.setValue(FACING, rot.rotate(state.getValue(FACING)));
    }

    @Override
    public BlockState mirror(BlockState state, Mirror mirrorIn) {
        return state.rotate(mirrorIn.getRotation(state.getValue(FACING)));
    }

    @Override
    protected boolean mayPlaceOn(BlockState pState, BlockGetter pLevel, BlockPos pPos) {
        return !pState.is(ModTags.Blocks.BEER_CAN_PLACE_ON);
    }

    @Override
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
        builder.add(FACING);
    }
}
