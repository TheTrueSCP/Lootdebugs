package net.the_goldbeards.lootdebugs.Block.Drinks;

import net.minecraft.core.BlockPos;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.StateDefinition;
import net.minecraft.world.level.block.state.properties.DirectionProperty;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;
import net.the_goldbeards.lootdebugs.util.ModTags;
import org.jetbrains.annotations.Nullable;

public class OilyOafBlock extends BushBlock
{
    public OilyOafBlock(Properties properties) {
        super(properties);
    }

    //VoxelShape
    private static final DirectionProperty FACING = HorizontalDirectionalBlock.FACING;

    private static final VoxelShape SHAPE_N = Shapes.or(
            Block.box(5.060534479028931, 7, 6.017241379310345, 9.06053447902893, 9, 9.017241379310345),
            Block.box(6.060534479028931, 1, 6.017241379310345, 10.06053447902893, 8, 10.017241379310345),
            Block.box(6.050534479028931, 5, 4.977241379310346, 9.07053447902893, 8, 11.057241379310346),
            Block.box(2.0625344790289315, 3.17, 7.517241379310345, 3.162534479028931, 5.92, 8.517241379310345),
            Block.box(2.3883764414881696, -0.5018976761958325, 7.517241379310345, 3.4883764414881693, 1.4981023238041677, 8.517241379310345),
            Block.box(4.1105344790289315, 0.613, 7.507241379310345, 6.1105344790289315, 1.713, 8.527241379310345),
            Block.box(2.8441935029423107, -0.5029101068030206, 7.507241379310345, 5.344193502942311, 0.5970898931969795, 8.527241379310345),
            Block.box(2.710534479028931, 5.55, 7.497241379310346, 5.060534479028931, 6.55, 8.537241379310345),
            Block.box(0.2728521301297633, 3.467325254592798, 7.507241379310345, 2.2728521301297633, 4.467325254592798, 8.527241379310345),
            Block.box(4.911318548529893, 0, 6.639760876867101, 5.911318548529893, 7, 8.6397608768671),
            Block.box(9.911318548529891, 0, 6.639760876867101, 10.911318548529891, 7, 8.6397608768671),
            Block.box(6.911318548529891, 0, 9.6397608768671, 8.911318548529891, 7, 10.6397608768671),
            Block.box(6.911318548529891, 0, 4.639760876867101, 8.911318548529891, 7, 5.639760876867101),
            Block.box(7.060534479028931, 0, 10.017241379310345, 9.06053447902893, 7, 11.017241379310345),
            Block.box(7.060534479028931, 0, 5.017241379310345, 9.06053447902893, 7, 6.017241379310345),
            Block.box(10.06053447902893, 0, 7.017241379310345, 11.06053447902893, 7, 9.017241379310345),
            Block.box(5.060534479028931, 0, 7.017241379310345, 6.060534479028931, 7, 9.017241379310345),
            Block.box(6.060534479028931, 0.10000000000000009, 6.017241379310345, 10.06053447902893, 1.1, 10.017241379310345),
            Block.box(4.699127052302538, 4.15, 7.289671998670599, 5.699127052302538, 5.35, 9.489671998670598),
            Block.box(4.8605344790289315, 4.15, 6.9172413793103456, 5.8605344790289315, 5.35, 9.117241379310345),
            Block.box(4.8605344790289315, 1.75, 6.9172413793103456, 5.8605344790289315, 2.95, 9.117241379310345),
            Block.box(4.699127052302538, 1.75, 7.289671998670599, 5.699127052302538, 2.95, 9.489671998670598),
            Block.box(6.960534479028931, 1.75, 10.217241379310346, 9.16053447902893, 2.95, 11.217241379310346),
            Block.box(6.960534479028931, 4.15, 10.217241379310346, 9.16053447902893, 5.35, 11.217241379310346),
            Block.box(10.111318548529892, 4.15, 6.539760876867101, 11.111318548529892, 5.35, 8.7397608768671),
            Block.box(10.111318548529892, 1.75, 6.539760876867101, 11.111318548529892, 2.95, 8.7397608768671),
            Block.box(10.26053447902893, 1.75, 6.9172413793103456, 11.26053447902893, 2.95, 9.117241379310345),
            Block.box(10.26053447902893, 4.15, 6.9172413793103456, 11.26053447902893, 5.35, 9.117241379310345),
            Block.box(10.099127052302538, 4.15, 7.289671998670599, 11.099127052302538, 5.35, 9.489671998670598),
            Block.box(10.099127052302538, 1.75, 7.289671998670599, 11.099127052302538, 2.95, 9.489671998670598),
            Block.box(6.960534479028931, 1.75, 4.817241379310346, 9.16053447902893, 2.95, 5.817241379310346),
            Block.box(4.711318548529894, 4.15, 6.539760876867101, 5.711318548529894, 5.35, 8.7397608768671),
            Block.box(4.711318548529894, 1.75, 6.539760876867101, 5.711318548529894, 2.95, 8.7397608768671),
            Block.box(6.960534479028931, 4.15, 4.817241379310346, 9.16053447902893, 5.35, 5.817241379310346),
            Block.box(7.560534479028931, 4.25, 4.6672413793103456, 8.56053447902893, 5.25, 5.6672413793103456),
            Block.box(7.560534479028931, 1.85, 4.6672413793103456, 8.56053447902893, 2.85, 5.6672413793103456),
            Block.box(10.249127052302537, 1.85, 7.8896719986706, 11.249127052302537, 2.85, 8.8896719986706),
            Block.box(4.5613185485298935, 4.25, 7.139760876867101, 5.5613185485298935, 5.25, 8.1397608768671),
            Block.box(4.5613185485298935, 1.85, 7.139760876867101, 5.5613185485298935, 2.85, 8.1397608768671),
            Block.box(4.710534479028931, 1.85, 7.517241379310345, 5.710534479028931, 2.85, 8.517241379310345),
            Block.box(4.710534479028931, 4.25, 7.517241379310345, 5.710534479028931, 5.25, 8.517241379310345),
            Block.box(7.411318548529891, 1.85, 9.9897608768671, 8.411318548529891, 2.85, 10.9897608768671),
            Block.box(7.411318548529891, 4.25, 9.9897608768671, 8.411318548529891, 5.25, 10.9897608768671),
            Block.box(7.560534479028931, 4.25, 10.367241379310345, 8.56053447902893, 5.25, 11.367241379310345),
            Block.box(7.560534479028931, 1.85, 10.367241379310345, 8.56053447902893, 2.85, 11.367241379310345),
            Block.box(10.261318548529893, 1.85, 7.139760876867101, 11.261318548529893, 2.85, 8.1397608768671),
            Block.box(10.261318548529893, 4.25, 7.139760876867101, 11.261318548529893, 5.25, 8.1397608768671),
            Block.box(10.41053447902893, 4.25, 7.517241379310345, 11.41053447902893, 5.25, 8.517241379310345),
            Block.box(10.41053447902893, 1.85, 7.517241379310345, 11.41053447902893, 2.85, 8.517241379310345),
            Block.box(10.249127052302537, 4.25, 7.8896719986706, 11.249127052302537, 5.25, 8.8896719986706),
            Block.box(6.960534479028931, -0.55, 4.817241379310346, 9.16053447902893, 0.45, 5.817241379310346),
            Block.box(10.099127052302538, -0.55, 7.289671998670599, 11.099127052302538, 0.45, 9.489671998670598),
            Block.box(10.26053447902893, -0.55, 6.9172413793103456, 11.26053447902893, 0.45, 9.117241379310345),
            Block.box(4.711318548529894, -0.55, 6.539760876867101, 5.711318548529894, 0.45, 8.7397608768671),
            Block.box(4.8605344790289315, -0.55, 6.9172413793103456, 5.8605344790289315, 0.45, 9.117241379310345),
            Block.box(4.699127052302538, -0.55, 7.289671998670599, 5.699127052302538, 0.45, 9.489671998670598),
            Block.box(6.960534479028931, -0.55, 10.217241379310346, 9.16053447902893, 0.45, 11.217241379310346),
            Block.box(10.111318548529892, -0.55, 6.539760876867101, 11.111318548529892, 0.45, 8.7397608768671)
    );

    private static final VoxelShape SHAPE_E = Shapes.or(
            Block.box(7.521646549859293, 7, 4.538887929169638, 10.521646549859293, 9, 8.538887929169638),
            Block.box(6.521646549859293, 1, 5.538887929169638, 10.521646549859293, 8, 9.538887929169638),
            Block.box(5.481646549859292, 5, 5.528887929169638, 11.561646549859292, 8, 8.548887929169638),
            Block.box(8.021646549859293, 3.17, 1.5408879291696387, 9.021646549859293, 5.92, 2.6408879291696383),
            Block.box(8.021646549859293, -0.5018976761958325, 1.8667298916288768, 9.021646549859293, 1.4981023238041677, 2.9667298916288765),
            Block.box(8.011646549859293, 0.613, 3.5888879291696387, 9.031646549859293, 1.713, 5.588887929169639),
            Block.box(8.011646549859293, -0.5029101068030206, 2.322546953083018, 9.031646549859293, 0.5970898931969795, 4.822546953083018),
            Block.box(8.001646549859293, 5.55, 2.1888879291696384, 9.041646549859292, 6.55, 4.538887929169638),
            Block.box(8.011646549859293, 3.467325254592798, -0.24879441972952954, 9.031646549859293, 4.467325254592798, 1.7512055802704705),
            Block.box(7.899127052302537, 0, 4.3896719986706, 9.899127052302537, 7, 5.3896719986706),
            Block.box(7.899127052302537, 0, 9.389671998670599, 9.899127052302537, 7, 10.389671998670599),
            Block.box(5.899127052302537, 0, 6.3896719986705985, 6.899127052302537, 7, 8.389671998670599),
            Block.box(10.899127052302537, 0, 6.3896719986705985, 11.899127052302537, 7, 8.389671998670599),
            Block.box(5.521646549859293, 0, 6.538887929169638, 6.521646549859293, 7, 8.538887929169638),
            Block.box(10.521646549859293, 0, 6.538887929169638, 11.521646549859293, 7, 8.538887929169638),
            Block.box(7.521646549859293, 0, 9.538887929169638, 9.521646549859293, 7, 10.538887929169638),
            Block.box(7.521646549859293, 0, 4.538887929169638, 9.521646549859293, 7, 5.538887929169638),
            Block.box(6.521646549859293, 0.10000000000000009, 5.538887929169638, 10.521646549859293, 1.1, 9.538887929169638),
            Block.box(7.04921593049904, 4.15, 4.177480502443245, 9.24921593049904, 5.35, 5.177480502443245),
            Block.box(7.421646549859293, 4.15, 4.338887929169639, 9.621646549859292, 5.35, 5.338887929169639),
            Block.box(7.421646549859293, 1.75, 4.338887929169639, 9.621646549859292, 2.95, 5.338887929169639),
            Block.box(7.04921593049904, 1.75, 4.177480502443245, 9.24921593049904, 2.95, 5.177480502443245),
            Block.box(5.321646549859292, 1.75, 6.438887929169638, 6.321646549859292, 2.95, 8.638887929169638),
            Block.box(5.321646549859292, 4.15, 6.438887929169638, 6.321646549859292, 5.35, 8.638887929169638),
            Block.box(7.799127052302538, 4.15, 9.5896719986706, 9.999127052302537, 5.35, 10.5896719986706),
            Block.box(7.799127052302538, 1.75, 9.5896719986706, 9.999127052302537, 2.95, 10.5896719986706),
            Block.box(7.421646549859293, 1.75, 9.738887929169637, 9.621646549859292, 2.95, 10.738887929169637),
            Block.box(7.421646549859293, 4.15, 9.738887929169637, 9.621646549859292, 5.35, 10.738887929169637),
            Block.box(7.04921593049904, 4.15, 9.577480502443246, 9.24921593049904, 5.35, 10.577480502443246),
            Block.box(7.04921593049904, 1.75, 9.577480502443246, 9.24921593049904, 2.95, 10.577480502443246),
            Block.box(10.721646549859292, 1.75, 6.438887929169638, 11.721646549859292, 2.95, 8.638887929169638),
            Block.box(7.799127052302538, 4.15, 4.189671998670601, 9.999127052302537, 5.35, 5.189671998670601),
            Block.box(7.799127052302538, 1.75, 4.189671998670601, 9.999127052302537, 2.95, 5.189671998670601),
            Block.box(10.721646549859292, 4.15, 6.438887929169638, 11.721646549859292, 5.35, 8.638887929169638),
            Block.box(10.871646549859292, 4.25, 7.038887929169638, 11.871646549859292, 5.25, 8.038887929169638),
            Block.box(10.871646549859292, 1.85, 7.038887929169638, 11.871646549859292, 2.85, 8.038887929169638),
            Block.box(7.649215930499038, 1.85, 9.727480502443244, 8.649215930499038, 2.85, 10.727480502443244),
            Block.box(8.399127052302537, 4.25, 4.039671998670601, 9.399127052302537, 5.25, 5.039671998670601),
            Block.box(8.399127052302537, 1.85, 4.039671998670601, 9.399127052302537, 2.85, 5.039671998670601),
            Block.box(8.021646549859293, 1.85, 4.188887929169638, 9.021646549859293, 2.85, 5.188887929169638),
            Block.box(8.021646549859293, 4.25, 4.188887929169638, 9.021646549859293, 5.25, 5.188887929169638),
            Block.box(5.549127052302538, 1.85, 6.8896719986705985, 6.549127052302538, 2.85, 7.8896719986705985),
            Block.box(5.549127052302538, 4.25, 6.8896719986705985, 6.549127052302538, 5.25, 7.8896719986705985),
            Block.box(5.171646549859293, 4.25, 7.038887929169638, 6.171646549859293, 5.25, 8.038887929169638),
            Block.box(5.171646549859293, 1.85, 7.038887929169638, 6.171646549859293, 2.85, 8.038887929169638),
            Block.box(8.399127052302537, 1.85, 9.7396719986706, 9.399127052302537, 2.85, 10.7396719986706),
            Block.box(8.399127052302537, 4.25, 9.7396719986706, 9.399127052302537, 5.25, 10.7396719986706),
            Block.box(8.021646549859293, 4.25, 9.888887929169638, 9.021646549859293, 5.25, 10.888887929169638),
            Block.box(8.021646549859293, 1.85, 9.888887929169638, 9.021646549859293, 2.85, 10.888887929169638),
            Block.box(7.649215930499038, 4.25, 9.727480502443244, 8.649215930499038, 5.25, 10.727480502443244),
            Block.box(10.721646549859292, -0.55, 6.438887929169638, 11.721646549859292, 0.45, 8.638887929169638),
            Block.box(7.04921593049904, -0.55, 9.577480502443246, 9.24921593049904, 0.45, 10.577480502443246),
            Block.box(7.421646549859293, -0.55, 9.738887929169637, 9.621646549859292, 0.45, 10.738887929169637),
            Block.box(7.799127052302538, -0.55, 4.189671998670601, 9.999127052302537, 0.45, 5.189671998670601),
            Block.box(7.421646549859293, -0.55, 4.338887929169639, 9.621646549859292, 0.45, 5.338887929169639),
            Block.box(7.04921593049904, -0.55, 4.177480502443245, 9.24921593049904, 0.45, 5.177480502443245),
            Block.box(5.321646549859292, -0.55, 6.438887929169638, 6.321646549859292, 0.45, 8.638887929169638),
            Block.box(7.799127052302538, -0.55, 9.5896719986706, 9.999127052302537, 0.45, 10.5896719986706)
    );

    private static final VoxelShape SHAPE_S = Shapes.or(
            Block.box(7, 7, 7, 11, 9, 10),
            Block.box(6, 1, 6, 10, 8, 10),
            Block.box(6.99, 5, 4.96, 10.01, 8, 11.04),
            Block.box(12.898, 3.17, 7.5, 13.998, 5.92, 8.5),
            Block.box(13.361, 1.4965, 7.5, 14.461, 3.4965, 8.5),
            Block.box(9.95, 0.613, 7.49, 11.95, 1.713, 8.51),
            Block.box(11.85, 1.189, 7.49, 14.35, 2.289, 8.51),
            Block.box(11, 5.55, 7.48, 13.35, 6.55, 8.52),
            Block.box(13, 5.8, 7.49, 15, 6.8, 8.51),
            Block.box(10, 0, 7, 11, 7, 9),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(10, 0, 7, 11, 7, 9),
            Block.box(6, 0.1, 6, 10, 1.1, 10),
            Block.box(10.2, 4.15, 6.9, 11.2, 5.35, 9.1),
            Block.box(10.2, 4.15, 6.9, 11.2, 5.35, 9.1),
            Block.box(10.2, 1.75, 6.9, 11.2, 2.95, 9.1),
            Block.box(10.2, 1.75, 6.9, 11.2, 2.95, 9.1),
            Block.box(6.9, 1.75, 4.8, 9.1, 2.95, 5.8),
            Block.box(6.9, 4.15, 4.8, 9.1, 5.35, 5.8),
            Block.box(4.8, 4.15, 6.9, 5.8, 5.35, 9.1),
            Block.box(4.8, 1.75, 6.9, 5.8, 2.95, 9.1),
            Block.box(4.8, 1.75, 6.9, 5.8, 2.95, 9.1),
            Block.box(4.8, 4.15, 6.9, 5.8, 5.35, 9.1),
            Block.box(4.8, 4.15, 6.9, 5.8, 5.35, 9.1),
            Block.box(4.8, 1.75, 6.9, 5.8, 2.95, 9.1),
            Block.box(6.9, 1.75, 10.2, 9.1, 2.95, 11.2),
            Block.box(10.2, 4.15, 6.9, 11.2, 5.35, 9.1),
            Block.box(10.2, 1.75, 6.9, 11.2, 2.95, 9.1),
            Block.box(6.9, 4.15, 10.2, 9.1, 5.35, 11.2),
            Block.box(7.5, 4.25, 10.35, 8.5, 5.25, 11.35),
            Block.box(7.5, 1.85, 10.35, 8.5, 2.85, 11.35),
            Block.box(4.65, 1.85, 7.5, 5.65, 2.85, 8.5),
            Block.box(10.35, 4.25, 7.5, 11.35, 5.25, 8.5),
            Block.box(10.35, 1.85, 7.5, 11.35, 2.85, 8.5),
            Block.box(10.35, 1.85, 7.5, 11.35, 2.85, 8.5),
            Block.box(10.35, 4.25, 7.5, 11.35, 5.25, 8.5),
            Block.box(7.5, 1.85, 4.65, 8.5, 2.85, 5.65),
            Block.box(7.5, 4.25, 4.65, 8.5, 5.25, 5.65),
            Block.box(7.5, 4.25, 4.65, 8.5, 5.25, 5.65),
            Block.box(7.5, 1.85, 4.65, 8.5, 2.85, 5.65),
            Block.box(4.65, 1.85, 7.5, 5.65, 2.85, 8.5),
            Block.box(4.65, 4.25, 7.5, 5.65, 5.25, 8.5),
            Block.box(4.65, 4.25, 7.5, 5.65, 5.25, 8.5),
            Block.box(4.65, 1.85, 7.5, 5.65, 2.85, 8.5),
            Block.box(4.65, 4.25, 7.5, 5.65, 5.25, 8.5),
            Block.box(6.9, -0.55, 10.2, 9.1, 0.45, 11.2),
            Block.box(4.8, -0.55, 6.9, 5.8, 0.45, 9.1),
            Block.box(4.8, -0.55, 6.9, 5.8, 0.45, 9.1),
            Block.box(10.2, -0.55, 6.9, 11.2, 0.45, 9.1),
            Block.box(10.2, -0.55, 6.9, 11.2, 0.45, 9.1),
            Block.box(10.2, -0.55, 6.9, 11.2, 0.45, 9.1),
            Block.box(6.9, -0.55, 4.8, 9.1, 0.45, 5.8),
            Block.box(4.8, -0.55, 6.9, 5.8, 0.45, 9.1)
    );

    private static final VoxelShape SHAPE_W = Shapes.or(
            Block.box(6.538887929169638, 6, 7.478353450140707, 9.538887929169638, 8, 11.478353450140707),
            Block.box(6.538887929169638, 0, 6.478353450140707, 10.538887929169638, 7, 10.478353450140707),
            Block.box(5.498887929169639, 4, 7.468353450140707, 11.578887929169639, 7, 10.488353450140707),
            Block.box(8.038887929169638, 2.17, 13.376353450140707, 9.038887929169638, 4.92, 14.476353450140707),
            Block.box(8.038887929169638, -1.5018976761958325, 13.050511487681469, 9.038887929169638, 0.49810232380416775, 14.150511487681468),
            Block.box(8.028887929169638, -0.387, 10.428353450140706, 9.048887929169638, 0.7130000000000001, 12.428353450140706),
            Block.box(8.028887929169638, -1.5029101068030206, 11.194694426227327, 9.048887929169638, -0.40291010680302053, 13.694694426227327),
            Block.box(8.018887929169638, 4.55, 11.478353450140707, 9.058887929169638, 5.55, 13.828353450140707),
            Block.box(8.028887929169638, 2.467325254592798, 14.266035799039875, 9.048887929169638, 3.467325254592798, 16.266035799039877),
            Block.box(7.161407426726393, -1, 10.627569380639745, 9.161407426726393, 6, 11.627569380639745),
            Block.box(7.161407426726393, -1, 5.627569380639746, 9.161407426726393, 6, 6.627569380639746),
            Block.box(10.161407426726393, -1, 7.627569380639747, 11.161407426726393, 6, 9.627569380639747),
            Block.box(5.161407426726393, -1, 7.627569380639747, 6.161407426726393, 6, 9.627569380639747),
            Block.box(10.538887929169638, -1, 7.478353450140707, 11.538887929169638, 6, 9.478353450140707),
            Block.box(5.538887929169638, -1, 7.478353450140707, 6.538887929169638, 6, 9.478353450140707),
            Block.box(7.538887929169638, -1, 5.478353450140707, 9.538887929169638, 6, 6.478353450140707),
            Block.box(7.538887929169638, -1, 10.478353450140707, 9.538887929169638, 6, 11.478353450140707),
            Block.box(6.538887929169638, -0.8999999999999999, 6.478353450140707, 10.538887929169638, 0.10000000000000009, 10.478353450140707),
            Block.box(7.811318548529892, 3.1500000000000004, 10.8397608768671, 10.011318548529891, 4.35, 11.8397608768671),
            Block.box(7.438887929169638, 3.1500000000000004, 10.678353450140706, 9.638887929169638, 4.35, 11.678353450140706),
            Block.box(7.438887929169638, 0.75, 10.678353450140706, 9.638887929169638, 1.9500000000000002, 11.678353450140706),
            Block.box(7.811318548529892, 0.75, 10.8397608768671, 10.011318548529891, 1.9500000000000002, 11.8397608768671),
            Block.box(10.738887929169639, 0.75, 7.3783534501407075, 11.738887929169639, 1.9500000000000002, 9.578353450140707),
            Block.box(10.738887929169639, 3.1500000000000004, 7.3783534501407075, 11.738887929169639, 4.35, 9.578353450140707),
            Block.box(7.061407426726394, 3.1500000000000004, 5.427569380639746, 9.261407426726393, 4.35, 6.427569380639746),
            Block.box(7.061407426726394, 0.75, 5.427569380639746, 9.261407426726393, 1.9500000000000002, 6.427569380639746),
            Block.box(7.438887929169638, 0.75, 5.278353450140707, 9.638887929169638, 1.9500000000000002, 6.278353450140707),
            Block.box(7.438887929169638, 3.1500000000000004, 5.278353450140707, 9.638887929169638, 4.35, 6.278353450140707),
            Block.box(7.811318548529892, 3.1500000000000004, 5.4397608768671, 10.011318548529891, 4.35, 6.4397608768671),
            Block.box(7.811318548529892, 0.75, 5.4397608768671, 10.011318548529891, 1.9500000000000002, 6.4397608768671),
            Block.box(5.338887929169639, 0.75, 7.3783534501407075, 6.338887929169639, 1.9500000000000002, 9.578353450140707),
            Block.box(7.061407426726394, 3.1500000000000004, 10.827569380639744, 9.261407426726393, 4.35, 11.827569380639744),
            Block.box(7.061407426726394, 0.75, 10.827569380639744, 9.261407426726393, 1.9500000000000002, 11.827569380639744),
            Block.box(5.338887929169639, 3.1500000000000004, 7.3783534501407075, 6.338887929169639, 4.35, 9.578353450140707),
            Block.box(5.188887929169638, 3.25, 7.978353450140707, 6.188887929169638, 4.25, 8.978353450140707),
            Block.box(5.188887929169638, 0.8500000000000001, 7.978353450140707, 6.188887929169638, 1.85, 8.978353450140707),
            Block.box(8.411318548529893, 0.8500000000000001, 5.289760876867101, 9.411318548529893, 1.85, 6.289760876867101),
            Block.box(7.661407426726393, 3.25, 10.977569380639745, 8.661407426726393, 4.25, 11.977569380639745),
            Block.box(7.661407426726393, 0.8500000000000001, 10.977569380639745, 8.661407426726393, 1.85, 11.977569380639745),
            Block.box(8.038887929169638, 0.8500000000000001, 10.828353450140707, 9.038887929169638, 1.85, 11.828353450140707),
            Block.box(8.038887929169638, 3.25, 10.828353450140707, 9.038887929169638, 4.25, 11.828353450140707),
            Block.box(10.511407426726393, 0.8500000000000001, 8.127569380639747, 11.511407426726393, 1.85, 9.127569380639747),
            Block.box(10.511407426726393, 3.25, 8.127569380639747, 11.511407426726393, 4.25, 9.127569380639747),
            Block.box(10.888887929169638, 3.25, 7.978353450140707, 11.888887929169638, 4.25, 8.978353450140707),
            Block.box(10.888887929169638, 0.8500000000000001, 7.978353450140707, 11.888887929169638, 1.85, 8.978353450140707),
            Block.box(7.661407426726393, 0.8500000000000001, 5.277569380639746, 8.661407426726393, 1.85, 6.277569380639746),
            Block.box(7.661407426726393, 3.25, 5.277569380639746, 8.661407426726393, 4.25, 6.277569380639746),
            Block.box(8.038887929169638, 3.25, 5.1283534501407075, 9.038887929169638, 4.25, 6.1283534501407075),
            Block.box(8.038887929169638, 0.8500000000000001, 5.1283534501407075, 9.038887929169638, 1.85, 6.1283534501407075),
            Block.box(8.411318548529893, 3.25, 5.289760876867101, 9.411318548529893, 4.25, 6.289760876867101),
            Block.box(5.338887929169639, -1.55, 7.3783534501407075, 6.338887929169639, -0.55, 9.578353450140707),
            Block.box(7.811318548529892, -1.55, 5.4397608768671, 10.011318548529891, -0.55, 6.4397608768671),
            Block.box(7.438887929169638, -1.55, 5.278353450140707, 9.638887929169638, -0.55, 6.278353450140707),
            Block.box(7.061407426726394, -1.55, 10.827569380639744, 9.261407426726393, -0.55, 11.827569380639744),
            Block.box(7.438887929169638, -1.55, 10.678353450140706, 9.638887929169638, -0.55, 11.678353450140706),
            Block.box(7.811318548529892, -1.55, 10.8397608768671, 10.011318548529891, -0.55, 11.8397608768671),
            Block.box(10.738887929169639, -1.55, 7.3783534501407075, 11.738887929169639, -0.55, 9.578353450140707),
            Block.box(7.061407426726394, -1.55, 5.427569380639746, 9.261407426726393, -0.55, 6.427569380639746)
    );

    @Override
    public VoxelShape getShape(BlockState state, BlockGetter p_60556_, BlockPos p_60557_, CollisionContext p_60558_) {
        switch (state.getValue(FACING))
        {
            case NORTH:
                return SHAPE_N;

            case EAST:
                return SHAPE_E;

            case WEST:
                return SHAPE_W;

            case SOUTH:
                return SHAPE_S;

            default:
                return SHAPE_N;
        }
    }


    @Nullable
    @Override
    public BlockState getStateForPlacement(BlockPlaceContext context) {
        return this.defaultBlockState().setValue(FACING,context.getHorizontalDirection().getOpposite());
    }

    @Override
    public BlockState rotate(BlockState state, LevelAccessor world, BlockPos pos, Rotation rot) {
        return state.setValue(FACING, rot.rotate(state.getValue(FACING)));
    }

    @Override
    public BlockState mirror(BlockState state, Mirror mirrorIn) {
        return state.rotate(mirrorIn.getRotation(state.getValue(FACING)));
    }

    @Override
    protected boolean mayPlaceOn(BlockState pState, BlockGetter pLevel, BlockPos pPos) {
        return !pState.is(ModTags.Blocks.BEER_CAN_PLACE_ON);
    }

    @Override
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
        builder.add(FACING);
    }


}
