package net.the_goldbeards.lootdebugs.Block.Beers;

import net.minecraft.core.BlockPos;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;
import net.the_goldbeards.lootdebugs.Block.BasicRotatableBlock;

public class FlintLockesDelightBlock extends BasicRotatableBlock {

    public FlintLockesDelightBlock(Properties properties) {
        super(properties);
    }

    private static final VoxelShape SHAPE_N = Shapes.or(
            Block.box(4.474482308405118, 1.2000000000000002, 7.016129032258064, 5.474482308405118, 6.25, 9.016129032258064),
            Block.box(2.9744823084051184, 4.75, 7.416129032258064, 4.474482308405118, 6.15, 8.616129032258064),
            Block.box(2.4744823084051184, 5.75, 7.516129032258064, 3.4744823084051184, 6.75, 8.516129032258064),
            Block.box(2.9744823084051184, 3.6, 7.516129032258064, 4.474482308405118, 4.75, 8.516129032258064),
            Block.box(2.4623851707375906, 6.209270428453586, 7.466129032258063, 4.462385170737591, 7.609270428453585, 8.566129032258063),
            Block.box(0.8095752540936445, 0.7149562279041333, 7.416129032258064, 2.3095752540936445, 2.714956227904133, 8.616129032258064),
            Block.box(0.3236023084051176, 1.4194399999999998, 7.316129032258065, 2.0236023084051187, 3.66944, 8.716129032258065),
            Block.box(0.07360230840511761, 0.4194399999999998, 7.216129032258063, 1.7736023084051187, 2.66944, 8.816129032258063),
            Block.box(4.837475152454175, 0, 6.669235465961069, 5.837475152454175, 7, 8.66923546596107),
            Block.box(9.837475152454175, 0, 6.669235465961069, 10.837475152454175, 7, 8.66923546596107),
            Block.box(6.837475152454175, 0, 9.66923546596107, 8.837475152454175, 7, 10.66923546596107),
            Block.box(6.837475152454175, 0, 4.669235465961069, 8.837475152454175, 7, 5.669235465961069),
            Block.box(6.974482308405118, 0, 10.016129032258064, 8.974482308405118, 7, 11.016129032258064),
            Block.box(6.974482308405118, 0, 5.016129032258064, 8.974482308405118, 7, 6.016129032258064),
            Block.box(9.974482308405118, 0, 7.016129032258064, 10.974482308405118, 7, 9.016129032258064),
            Block.box(4.974482308405118, 0, 7.116129032258064, 5.974482308405118, 7, 8.916129032258064),
            Block.box(5.974482308405118, 0.10000000000000009, 6.016129032258064, 9.974482308405118, 1.1, 10.016129032258064),
            Block.box(6.874482308405119, 6.25, 4.816129032258065, 9.074482308405118, 7.25, 6.316129032258065),
            Block.box(6.874482308405119, 2, 4.816129032258065, 9.074482308405118, 3.25, 5.816129032258065),
            Block.box(6.874482308405119, 0, 4.816129032258065, 9.074482308405118, 1.25, 5.816129032258065),
            Block.box(6.874482308405119, 0, 10.216129032258065, 9.074482308405118, 1.25, 11.216129032258065),
            Block.box(6.874482308405119, 2, 10.216129032258065, 9.074482308405118, 3.25, 11.216129032258065),
            Block.box(6.874482308405119, 6.25, 9.716129032258065, 9.074482308405118, 7.25, 11.216129032258065),
            Block.box(9.526070204370523, 6.250000000000001, 7.258298514380648, 11.026070204370523, 7.250000000000001, 9.458298514380648),
            Block.box(10.026070204370523, 2.000000000000001, 7.258298514380648, 11.026070204370523, 3.250000000000001, 9.458298514380648),
            Block.box(10.026070204370523, 8.881784197001252e-16, 7.258298514380648, 11.026070204370523, 1.2500000000000009, 9.458298514380648),
            Block.box(4.626070204370523, 8.881784197001252e-16, 7.258298514380648, 5.626070204370523, 1.2500000000000009, 9.458298514380648),
            Block.box(4.626070204370523, 2.000000000000001, 7.258298514380648, 5.626070204370523, 3.250000000000001, 9.458298514380648),
            Block.box(4.626070204370523, 6.250000000000001, 7.258298514380648, 6.126070204370523, 7.250000000000001, 9.458298514380648),
            Block.box(9.674482308405118, 6.25, 6.916129032258064, 11.174482308405118, 7.25, 9.116129032258064),
            Block.box(10.174482308405118, 2, 6.916129032258064, 11.174482308405118, 3.25, 9.116129032258064),
            Block.box(10.174482308405118, 0, 6.916129032258064, 11.174482308405118, 1.25, 9.116129032258064),
            Block.box(4.774482308405119, 0, 6.916129032258064, 5.774482308405119, 1.25, 9.116129032258064),
            Block.box(4.774482308405119, 2, 6.916129032258064, 5.774482308405119, 3.25, 9.116129032258064),
            Block.box(4.774482308405119, 6.25, 7.016129032258064, 6.274482308405119, 7.25, 9.016129032258064),
            Block.box(9.537475152454176, 6.250000000000001, 6.56923546596107, 11.037475152454176, 7.250000000000001, 8.769235465961069),
            Block.box(10.037475152454176, 2.000000000000001, 6.56923546596107, 11.037475152454176, 3.250000000000001, 8.769235465961069),
            Block.box(10.037475152454176, 8.881784197001252e-16, 6.56923546596107, 11.037475152454176, 1.2500000000000009, 8.769235465961069),
            Block.box(4.637475152454176, 8.881784197001252e-16, 6.56923546596107, 5.637475152454176, 1.2500000000000009, 8.769235465961069),
            Block.box(4.637475152454176, 2.000000000000001, 6.56923546596107, 5.637475152454176, 3.250000000000001, 8.769235465961069),
            Block.box(4.637475152454176, 6.250000000000001, 6.56923546596107, 6.137475152454176, 7.250000000000001, 8.769235465961069),
            Block.box(7.474482308405118, 2.125, 10.466129032258065, 8.474482308405118, 3.125, 11.466129032258065),
            Block.box(7.337475152454175, 2.125000000000001, 10.11923546596107, 8.337475152454175, 3.125000000000001, 11.11923546596107),
            Block.box(7.326070204370522, 2.125000000000001, 4.90829851438065, 8.326070204370522, 3.125000000000001, 5.90829851438065),
            Block.box(7.474482308405118, 2.125, 4.566129032258065, 8.474482308405118, 3.125, 5.566129032258065),
            Block.box(10.287475152454176, 2.125000000000001, 7.169235465961069, 11.287475152454176, 3.125000000000001, 8.16923546596107),
            Block.box(7.337475152454175, 2.125000000000001, 4.21923546596107, 8.337475152454175, 3.125000000000001, 5.21923546596107),
            Block.box(7.326070204370522, 0.125, 4.90829851438065, 8.326070204370522, 1.125, 5.90829851438065),
            Block.box(7.474482308405118, 0.125, 4.566129032258065, 8.474482308405118, 1.125, 5.566129032258065),
            Block.box(7.337475152454175, 0.125, 4.21923546596107, 8.337475152454175, 1.125, 5.21923546596107),
            Block.box(4.524482308405119, 0.125, 7.516129032258064, 5.524482308405119, 1.125, 8.516129032258064),
            Block.box(10.287475152454176, 0.125, 7.169235465961069, 11.287475152454176, 1.125, 8.16923546596107),
            Block.box(7.337475152454175, 0.125, 10.11923546596107, 8.337475152454175, 1.125, 11.11923546596107),
            Block.box(7.474482308405118, 0.125, 10.466129032258065, 8.474482308405118, 1.125, 11.466129032258065),
            Block.box(10.874482308405119, 0.2250000000000001, 7.391129032258064, 11.874482308405119, 2.625, 8.641129032258064),
            Block.box(10.974482308405118, 2.625, 7.291129032258064, 11.974482308405118, 3.625, 8.741129032258064),
            Block.box(10.974482308405118, 0.125, 7.291129032258064, 11.974482308405118, 1.125, 8.741129032258064),
            Block.box(10.624482308405119, 3.625, 7.516129032258064, 11.624482308405119, 5.125, 8.516129032258064),
            Block.box(10.624482308405119, 4.225, 7.416129032258064, 11.724482308405118, 5.225, 8.616129032258064),
            Block.box(5.974482308405118, 5, 4.916129032258064, 8.974482308405118, 8, 11.116129032258064),
            Block.box(4.974482308405118, 7, 6.016129032258064, 8.974482308405118, 9, 9.016129032258064),
            Block.box(5.974482308405118, 1, 6.016129032258064, 9.974482308405118, 8, 10.016129032258064)
    );

    private static final VoxelShape SHAPE_S =Shapes.or(
            Block.box(10.5, 1.2, 7, 11.5, 6.25, 9),
            Block.box(11.5, 4.75, 7.4, 13, 6.15, 8.6),
            Block.box(12.5, 5.75, 7.5, 13.5, 6.75, 8.5),
            Block.box(11.5, 3.6, 7.5, 13, 4.75, 8.5),
            Block.box(12.75, 4.7, 7.45, 14.75, 6.1, 8.55),
            Block.box(13.5, 3.1, 7.4, 15, 5.1, 8.6),
            Block.box(13.95088, 1.41944, 7.3, 15.65088, 3.66944, 8.7),
            Block.box(14.20088, 0.41944, 7.2, 15.90088, 2.66944, 8.8),
            Block.box(10, 0, 7, 11, 7, 9),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(7, 0, 5, 9, 7, 6),
            Block.box(7, 0, 10, 9, 7, 11),
            Block.box(5, 0, 7, 6, 7, 9),
            Block.box(10, 0, 7.1, 11, 7, 8.9),
            Block.box(6, 0.1, 6, 10, 1.1, 10),
            Block.box(6.9, 6.25, 9.7, 9.1, 7.25, 11.2),
            Block.box(6.9, 2, 10.2, 9.1, 3.25, 11.2),
            Block.box(6.9, 0, 10.2, 9.1, 1.25, 11.2),
            Block.box(6.9, 0, 4.8, 9.1, 1.25, 5.8),
            Block.box(6.9, 2, 4.8, 9.1, 3.25, 5.8),
            Block.box(6.9, 6.25, 4.8, 9.1, 7.25, 6.3),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 6.9, 11.2, 7.25, 9.1),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 7, 11.2, 7.25, 9),
            Block.box(4.8, 6.25, 6.9, 6.3, 7.25, 9.1),
            Block.box(4.8, 2, 6.9, 5.8, 3.25, 9.1),
            Block.box(4.8, 0, 6.9, 5.8, 1.25, 9.1),
            Block.box(10.2, 0, 6.9, 11.2, 1.25, 9.1),
            Block.box(10.2, 2, 6.9, 11.2, 3.25, 9.1),
            Block.box(9.7, 6.25, 6.9, 11.2, 7.25, 9.1),
            Block.box(7.5, 2.125, 4.55, 8.5, 3.125, 5.55),
            Block.box(7.5, 2.125, 4.55, 8.5, 3.125, 5.55),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(4.55, 2.125, 7.5, 5.55, 3.125, 8.5),
            Block.box(7.5, 2.125, 10.45, 8.5, 3.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(7.5, 0.125, 10.45, 8.5, 1.125, 11.45),
            Block.box(10.45, 0.125, 7.5, 11.45, 1.125, 8.5),
            Block.box(4.55, 0.125, 7.5, 5.55, 1.125, 8.5),
            Block.box(7.5, 0.125, 4.55, 8.5, 1.125, 5.55),
            Block.box(7.5, 0.125, 4.55, 8.5, 1.125, 5.55),
            Block.box(4.1, 0.225, 7.375, 5.1, 2.625, 8.625),
            Block.box(4, 2.625, 7.275, 5, 3.625, 8.725),
            Block.box(4, 0.125, 7.275, 5, 1.125, 8.725),
            Block.box(4.35, 3.625, 7.5, 5.35, 5.125, 8.5),
            Block.box(4.25, 4.225, 7.4, 5.35, 5.225, 8.6),
            Block.box(7, 5, 4.9, 10, 8, 11.1),
            Block.box(7, 7, 7, 11, 9, 10),
            Block.box(6, 1, 6, 10, 8, 10)
    );

    private static final VoxelShape SHAPE_W = Shapes.or(
            Block.box(6.975440000000013, 1.2, 10.52456, 8.97544000000001, 6.25, 11.52456),
            Block.box(7.37544000000001, 4.75, 11.52456, 8.57544000000001, 6.15, 13.02456),
            Block.box(7.47544000000001, 5.75, 12.52456, 8.47544000000001, 6.75, 13.52456),
            Block.box(7.47544000000001, 3.6, 11.52456, 8.47544000000001, 4.75, 13.02456),
            Block.box(7.425440000000009, 4.304372784444212, 12.477496913265357, 8.52544000000001, 5.704372784444211, 14.477496913265359),
            Block.box(7.37544000000001, 3.0920757890129003, 13.784722301160615, 8.57544000000001, 5.0920757890129, 15.284722301160617),
            Block.box(7.27544000000001, 1.41944, 13.975439999999997, 8.675440000000009, 3.66944, 15.675440000000002),
            Block.box(7.175440000000009, 0.41944, 14.225439999999999, 8.77544000000001, 2.66944, 15.925440000000002),
            Block.box(9.97544000000001, 0, 7.024559999999999, 10.97544000000001, 7, 9.02456),
            Block.box(4.975440000000015, 0, 7.024559999999999, 5.975440000000015, 7, 9.02456),
            Block.box(6.975440000000013, 0, 5.024559999999999, 8.97544000000001, 7, 6.024559999999999),
            Block.box(7.075440000000011, 0, 10.02456, 8.87544000000001, 7, 11.02456),
            Block.box(5.975440000000015, 0.1, 6.024559999999999, 9.97544000000001, 1.1, 10.02456),
            Block.box(4.775440000000016, 6.25, 6.92456, 6.275440000000016, 7.25, 9.124559999999999),
            Block.box(4.775440000000016, 2, 6.92456, 5.775440000000016, 3.25, 9.124559999999999),
            Block.box(4.775440000000016, 0, 6.92456, 5.775440000000016, 1.25, 9.124559999999999),
            Block.box(10.175440000000009, 0, 6.92456, 11.175440000000009, 1.25, 9.124559999999999),
            Block.box(10.175440000000009, 2, 6.92456, 11.175440000000009, 3.25, 9.124559999999999),
            Block.box(9.675440000000009, 6.25, 6.92456, 11.175440000000009, 7.25, 9.124559999999999),
            Block.box(6.8754400000000135, 6.25, 4.82456, 9.07544000000001, 7.25, 6.32456),
            Block.box(6.8754400000000135, 2, 4.82456, 9.07544000000001, 3.25, 5.82456),
            Block.box(6.8754400000000135, 0, 4.82456, 9.07544000000001, 1.25, 5.82456),
            Block.box(6.8754400000000135, 0, 10.224559999999999, 9.07544000000001, 1.25, 11.224559999999999),
            Block.box(6.975440000000013, 6.25, 9.724559999999999, 8.97544000000001, 7.25, 11.224559999999999),
            Block.box(10.425440000000009, 2.125, 7.524559999999999, 11.425440000000007, 3.125, 8.524559999999997),
            Block.box(4.525440000000016, 2.125, 7.524559999999999, 5.525440000000016, 3.125, 8.524559999999997),
            Block.box(4.525440000000016, 0.125, 7.524559999999999, 5.525440000000016, 1.125, 8.524559999999997),
            Block.box(7.47544000000001, 0.125, 10.474559999999999, 8.47544000000001, 1.125, 11.474559999999999),
            Block.box(10.425440000000009, 0.125, 7.524559999999999, 11.425440000000007, 1.125, 8.524559999999997),
            Block.box(7.35044000000001, 0.225, 4.124559999999999, 8.60044000000001, 2.625, 5.124559999999999),
            Block.box(7.25044000000001, 2.625, 4.024559999999999, 8.70044000000001, 3.625, 5.024559999999999),
            Block.box(7.25044000000001, 0.125, 4.024559999999999, 8.70044000000001, 1.125, 5.024559999999999),
            Block.box(7.47544000000001, 3.625, 4.374559999999999, 8.47544000000001, 5.125, 5.374559999999999),
            Block.box(7.37544000000001, 4.225, 4.274559999999999, 8.57544000000001, 5.225, 5.374559999999999),
            Block.box(4.875440000000015, 5, 7.024559999999999, 11.07544000000001, 8, 10.02456),
            Block.box(5.975440000000015, 7, 7.024559999999999, 8.97544000000001, 9, 11.02456),
            Block.box(5.975440000000015, 1, 6.024559999999999, 9.97544000000001, 8, 10.02456)
    );



    private static final VoxelShape SHAPE_E =Shapes.or(Block.box(4.499999999999992, 1.2, 7.0000000000000036, 5.499999999999992, 6.25, 9.000000000000002),
            Block.box(7.02455999999999, 1.2, 4.475440000000001, 9.024559999999987, 6.25, 5.475440000000001),
            Block.box(7.424559999999991, 4.75, 2.9754400000000003, 8.62455999999999, 6.15, 4.475440000000001),
            Block.box(7.52455999999999, 5.75, 2.4754400000000003, 8.52455999999999, 6.75, 3.4754400000000003),
            Block.box(7.52455999999999, 3.6, 2.9754400000000003, 8.52455999999999, 4.75, 4.475440000000001),
            Block.box(7.47455999999999, 4.304372784444212, 1.5225030867346405, 8.574559999999991, 5.704372784444211, 3.5225030867346425),
            Block.box(7.424559999999991, 3.0920757890129003, 0.7152776988393834, 8.62455999999999, 5.0920757890129, 2.2152776988393845),
            Block.box(7.324559999999991, 1.41944, 0.3245599999999984, 8.72455999999999, 3.66944, 2.0245600000000024),
            Block.box(7.22455999999999, 0.41944, 0.0745599999999984, 8.824559999999991, 2.66944, 1.7745600000000021),
            Block.box(5.02455999999999, 0, 6.975440000000001, 6.02455999999999, 7, 8.97544),
            Block.box(10.024559999999985, 0, 6.975440000000001, 11.024559999999985, 7, 8.97544),
            Block.box(7.02455999999999, 0, 9.97544, 9.024559999999987, 7, 10.97544),
            Block.box(7.12455999999999, 0, 4.975440000000001, 8.924559999999989, 7, 5.975440000000001),
            Block.box(6.02455999999999, 0.1, 5.975440000000001, 10.024559999999985, 1.1, 9.97544),
            Block.box(9.724559999999984, 6.25, 6.875440000000001, 11.224559999999984, 7.25, 9.07544),
            Block.box(10.224559999999984, 2, 6.875440000000001, 11.224559999999984, 3.25, 9.07544),
            Block.box(10.224559999999984, 0, 6.875440000000001, 11.224559999999984, 1.25, 9.07544),
            Block.box(4.824559999999991, 0, 6.875440000000001, 5.824559999999991, 1.25, 9.07544),
            Block.box(4.824559999999991, 2, 6.875440000000001, 5.824559999999991, 3.25, 9.07544),
            Block.box(4.824559999999991, 6.25, 6.875440000000001, 6.324559999999991, 7.25, 9.07544),
            Block.box(6.924559999999991, 6.25, 9.67544, 9.124559999999986, 7.25, 11.17544),
            Block.box(6.924559999999991, 2, 10.17544, 9.124559999999986, 3.25, 11.17544),
            Block.box(6.924559999999991, 0, 10.17544, 9.124559999999986, 1.25, 11.17544),
            Block.box(6.924559999999991, 0, 4.7754400000000015, 9.124559999999986, 1.25, 5.7754400000000015),
            Block.box(7.02455999999999, 6.25, 4.7754400000000015, 9.024559999999987, 7.25, 6.2754400000000015),
            Block.box(4.574559999999993, 2.125, 7.4754400000000025, 5.574559999999991, 3.125, 8.47544),
            Block.box(10.474559999999984, 2.125, 7.4754400000000025, 11.474559999999984, 3.125, 8.47544),
            Block.box(10.474559999999984, 0.125, 7.4754400000000025, 11.474559999999984, 1.125, 8.47544),
            Block.box(7.52455999999999, 0.125, 4.5254400000000015, 8.52455999999999, 1.125, 5.5254400000000015),
            Block.box(4.574559999999993, 0.125, 7.4754400000000025, 5.574559999999991, 1.125, 8.47544),
            Block.box(7.39955999999999, 0.225, 10.875440000000001, 8.64955999999999, 2.625, 11.875440000000001),
            Block.box(7.299559999999991, 2.625, 10.97544, 8.74955999999999, 3.625, 11.97544),
            Block.box(7.299559999999991, 0.125, 10.97544, 8.74955999999999, 1.125, 11.97544),
            Block.box(7.52455999999999, 3.625, 10.625440000000001, 8.52455999999999, 5.125, 11.625440000000001),
            Block.box(7.424559999999991, 4.225, 10.625440000000001, 8.62455999999999, 5.225, 11.72544),
            Block.box(4.924559999999991, 5, 5.975440000000001, 11.124559999999985, 8, 8.97544),
            Block.box(7.02455999999999, 7, 4.975440000000001, 10.024559999999985, 9, 8.97544),
            Block.box(6.02455999999999, 1, 5.975440000000001, 10.024559999999985, 8, 9.97544)
    );

    @Override
    public VoxelShape getShape(BlockState state, BlockGetter p_60556_, BlockPos p_60557_, CollisionContext p_60558_) {
        switch (state.getValue(FACING))
        {
            case NORTH:
                return SHAPE_N;

            case EAST:
                return SHAPE_E;

            case WEST:
                return SHAPE_W;

            case SOUTH:
                return SHAPE_S;

            default:
                return SHAPE_N;
        }
    }
}
