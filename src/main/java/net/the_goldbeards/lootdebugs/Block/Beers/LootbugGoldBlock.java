package net.the_goldbeards.lootdebugs.Block.Beers;

import net.minecraft.core.BlockPos;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;
import net.the_goldbeards.lootdebugs.Block.BasicRotatableBlock;

public class LootbugGoldBlock extends BasicRotatableBlock
{
    public LootbugGoldBlock(Properties properties) {
        super(properties);
    }

    private static final VoxelShape SHAPE_S =  Shapes.or(
            Block.box(4, 3, 5, 7, 13, 6),
            Block.box(7, 3, 5, 8, 13, 6),
            Block.box(8, 3, 6, 9, 13, 7),
            Block.box(9, 3, 6, 10, 13, 7),
            Block.box(10, 3, 6, 11, 12, 7),
            Block.box(9, 3, 5, 10, 12, 6),
            Block.box(8, 3, 4, 9, 7, 5),
            Block.box(8, 3, 5, 9, 12, 6),
            Block.box(5, 3, 4, 8, 9, 5),
            Block.box(5, 9, 4, 6, 12, 5),
            Block.box(6, 9, 4, 7, 11, 5),
            Block.box(4, 3, 4, 5, 12, 5),
            Block.box(3, 9, 3, 5, 11, 5),
            Block.box(3, 6, 3, 5, 8, 5),
            Block.box(3, 3, 3, 5, 5, 4),
            Block.box(3, 3, 5, 4, 11, 6),
            Block.box(3, 3, 4, 4, 6, 5),
            Block.box(7, 3, 6, 8, 13, 7),
            Block.box(7, 3, 9, 8, 13, 10),
            Block.box(8, 3, 7, 9, 14, 9),
            Block.box(10, 3, 7, 11, 13, 9),
            Block.box(11, 1, 7, 12, 7, 9),
            Block.box(12, 0, 7, 13, 5, 9),
            Block.box(13, 0, 7, 15, 2, 9),
            Block.box(13, 2, 7, 14, 3, 9),
            Block.box(13.25, 2, 7.375, 14.5, 10, 8.625),
            Block.box(13.75, 9.25, 7.5, 14.75, 10.25, 8.5),
            Block.box(14.25, 9.5, 7.5, 15.75, 10.5, 8.5),
            Block.box(11, 9.125, 7.5, 12.5, 10.125, 8.5),
            Block.box(11, 8.875, 7.25, 12.75, 9.875, 8.25),
            Block.box(10.75, 8.875, 7.75, 11.75, 9.875, 8.75),
            Block.box(11, 8.625, 7.5, 12, 9.625, 8.5),
            Block.box(13.375, 2, 7.75, 14.375, 6.25, 8.75),
            Block.box(13.375, 2, 7.25, 14.375, 7.25, 8.25),
            Block.box(13.625, 2, 7.5, 14.625, 4.25, 8.5),
            Block.box(13.625, 8, 7.5, 14.625, 9.25, 8.5),
            Block.box(13.125, 3, 7.5, 14.125, 8.25, 8.5),
            Block.box(11, 8.75, 7.375, 13.25, 10, 8.625),
            Block.box(9, 3, 7, 10, 14, 9),
            Block.box(3, 3, 6, 4, 13, 10),
            Block.box(2, 7, 6, 3, 11, 10),
            Block.box(2, 4, 7, 3, 7, 9),
            Block.box(3, 2, 6, 4, 3, 10),
            Block.box(4, 1, 6, 5, 2, 10),
            Block.box(5, 0, 7, 6, 1, 9),
            Block.box(9, 1, 5, 12, 2, 6),
            Block.box(6, 1, 4, 9, 2, 5),
            Block.box(7, 0, 5, 9, 1, 6),
            Block.box(6, 1, 5, 7, 2, 6),
            Block.box(5, 2, 4, 9, 3, 5),
            Block.box(8, 2, 5, 11, 3, 6),
            Block.box(10, 3, 5, 11, 10, 6),
            Block.box(9, 2, 4, 10, 5, 5),
            Block.box(11, 3, 6, 12, 4, 7),
            Block.box(11, 1, 6, 12, 3, 7),
            Block.box(12, 0, 6, 13, 1, 7),
            Block.box(4, 3, 10, 7, 13, 11),
            Block.box(7, 3, 10, 8, 13, 11),
            Block.box(8, 3, 10, 9, 12, 11),
            Block.box(5, 3, 11, 8, 9, 12),
            Block.box(5, 9, 11, 6, 12, 12),
            Block.box(6, 9, 11, 7, 11, 12),
            Block.box(4, 3, 11, 5, 12, 12),
            Block.box(3, 3, 10, 4, 11, 11),
            Block.box(3, 3, 11, 4, 6, 12),
            Block.box(9, 3, 10, 10, 12, 11),
            Block.box(8, 3, 11, 9, 7, 12),
            Block.box(3, 9, 11, 5, 11, 13),
            Block.box(3, 6, 11, 5, 8, 13),
            Block.box(3, 3, 12, 5, 5, 13),
            Block.box(4, 2, 4, 5, 3, 12),
            Block.box(5, 1, 5, 6, 2, 11),
            Block.box(9, 1, 10, 12, 2, 11),
            Block.box(6, 1, 11, 9, 2, 12),
            Block.box(5, 2, 11, 9, 3, 12),
            Block.box(8, 2, 10, 11, 3, 11),
            Block.box(10, 3, 10, 11, 10, 11),
            Block.box(9, 2, 11, 10, 5, 12),
            Block.box(7, 0, 10, 9, 1, 11),
            Block.box(6, 1, 10, 7, 2, 11),
            Block.box(8, 3, 9, 9, 13, 10),
            Block.box(9, 3, 9, 10, 13, 10),
            Block.box(10, 3, 9, 11, 12, 10),
            Block.box(11, 3, 9, 12, 4, 10),
            Block.box(11, 1, 9, 12, 3, 10),
            Block.box(12, 0, 9, 13, 1, 10),
            Block.box(6, 0, 6, 12, 1, 10),
            Block.box(3.9, 8, 5.9, 8, 15, 10.1),
            Block.box(5, 13, 6.9, 9, 16, 10),
            Block.box(5, 12.1, 4.9, 8.1, 15, 11.1)
        );


    private static final VoxelShape SHAPE_W =  Shapes.or(
            Block.box(10, 3, 4, 11, 13, 7),
            Block.box(10, 3, 7, 11, 13, 8),
            Block.box(9, 3, 8, 10, 13, 9),
            Block.box(9, 3, 9, 10, 13, 10),
            Block.box(9, 3, 10, 10, 12, 11),
            Block.box(10, 3, 9, 11, 12, 10),
            Block.box(11, 3, 8, 12, 7, 9),
            Block.box(10, 3, 8, 11, 12, 9),
            Block.box(11, 3, 5, 12, 9, 8),
            Block.box(11, 9, 5, 12, 12, 6),
            Block.box(11, 9, 6, 12, 11, 7),
            Block.box(11, 3, 4, 12, 12, 5),
            Block.box(11, 9, 3, 13, 11, 5),
            Block.box(11, 6, 3, 13, 8, 5),
            Block.box(12, 3, 3, 13, 5, 5),
            Block.box(10, 3, 3, 11, 11, 4),
            Block.box(11, 3, 3, 12, 6, 4),
            Block.box(9, 3, 7, 10, 13, 8),
            Block.box(6, 3, 7, 7, 13, 8),
            Block.box(7, 3, 8, 9, 14, 9),
            Block.box(7, 3, 10, 9, 13, 11),
            Block.box(7, 1, 11, 9, 7, 12),
            Block.box(7, 0, 12, 9, 5, 13),
            Block.box(7, 0, 13, 9, 2, 15),
            Block.box(7, 2, 13, 9, 3, 14),
            Block.box(7.375, 2, 13.25, 8.625, 10, 14.5),
            Block.box(7.5, 9.25, 13.75, 8.5, 10.25, 14.75),
            Block.box(7.5, 9.5, 14.25, 8.5, 10.5, 15.75),
            Block.box(7.5, 9.125, 11, 8.5, 10.125, 12.5),
            Block.box(7.75, 8.875, 11, 8.75, 9.875, 12.75),
            Block.box(7.25, 8.875, 10.75, 8.25, 9.875, 11.75),
            Block.box(7.5, 8.625, 11, 8.5, 9.625, 12),
            Block.box(7.25, 2, 13.375, 8.25, 6.25, 14.375),
            Block.box(7.75, 2, 13.375, 8.75, 7.25, 14.375),
            Block.box(7.5, 2, 13.625, 8.5, 4.25, 14.625),
            Block.box(7.5, 8, 13.625, 8.5, 9.25, 14.625),
            Block.box(7.5, 3, 13.125, 8.5, 8.25, 14.125),
            Block.box(7.375, 8.75, 11, 8.625, 10, 13.25),
            Block.box(7, 3, 9, 9, 14, 10),
            Block.box(6, 3, 3, 10, 13, 4),
            Block.box(6, 7, 2, 10, 11, 3),
            Block.box(7, 4, 2, 9, 7, 3),
            Block.box(6, 2, 3, 10, 3, 4),
            Block.box(6, 1, 4, 10, 2, 5),
            Block.box(7, 0, 5, 9, 1, 6),
            Block.box(10, 1, 9, 11, 2, 12),
            Block.box(11, 1, 6, 12, 2, 9),
            Block.box(10, 0, 7, 11, 1, 9),
            Block.box(10, 1, 6, 11, 2, 7),
            Block.box(11, 2, 5, 12, 3, 9),
            Block.box(10, 2, 8, 11, 3, 11),
            Block.box(10, 3, 10, 11, 10, 11),
            Block.box(11, 2, 9, 12, 5, 10),
            Block.box(9, 3, 11, 10, 4, 12),
            Block.box(9, 1, 11, 10, 3, 12),
            Block.box(9, 0, 12, 10, 1, 13),
            Block.box(5, 3, 4, 6, 13, 7),
            Block.box(5, 3, 7, 6, 13, 8),
            Block.box(5, 3, 8, 6, 12, 9),
            Block.box(4, 3, 5, 5, 9, 8),
            Block.box(4, 9, 5, 5, 12, 6),
            Block.box(4, 9, 6, 5, 11, 7),
            Block.box(4, 3, 4, 5, 12, 5),
            Block.box(5, 3, 3, 6, 11, 4),
            Block.box(4, 3, 3, 5, 6, 4),
            Block.box(5, 3, 9, 6, 12, 10),
            Block.box(4, 3, 8, 5, 7, 9),
            Block.box(3, 9, 3, 5, 11, 5),
            Block.box(3, 6, 3, 5, 8, 5),
            Block.box(3, 3, 3, 4, 5, 5),
            Block.box(4, 2, 4, 12, 3, 5),
            Block.box(5, 1, 5, 11, 2, 6),
            Block.box(5, 1, 9, 6, 2, 12),
            Block.box(4, 1, 6, 5, 2, 9),
            Block.box(4, 2, 5, 5, 3, 9),
            Block.box(5, 2, 8, 6, 3, 11),
            Block.box(5, 3, 10, 6, 10, 11),
            Block.box(4, 2, 9, 5, 5, 10),
            Block.box(5, 0, 7, 6, 1, 9),
            Block.box(5, 1, 6, 6, 2, 7),
            Block.box(6, 3, 8, 7, 13, 9),
            Block.box(6, 3, 9, 7, 13, 10),
            Block.box(6, 3, 10, 7, 12, 11),
            Block.box(6, 3, 11, 7, 4, 12),
            Block.box(6, 1, 11, 7, 3, 12),
            Block.box(6, 0, 12, 7, 1, 13),
            Block.box(6, 0, 6, 10, 1, 12),
            Block.box(5.9, 8, 3.9000000000000004, 10.1, 15, 8),
            Block.box(6, 13, 5, 9.1, 16, 9),
            Block.box(4.9, 12.1, 5, 11.1, 15, 8.1)
        );

    private static final VoxelShape SHAPE_N =  Shapes.or(
            Block.box(9, 3, 5, 12, 13, 6),
            Block.box(8, 3, 5, 9, 13, 6),
            Block.box(7, 3, 6, 8, 13, 7),
            Block.box(6, 3, 6, 7, 13, 7),
            Block.box(5, 3, 6, 6, 12, 7),
            Block.box(6, 3, 5, 7, 12, 6),
            Block.box(7, 3, 4, 8, 7, 5),
            Block.box(7, 3, 5, 8, 12, 6),
            Block.box(8, 3, 4, 11, 9, 5),
            Block.box(10, 9, 4, 11, 12, 5),
            Block.box(9, 9, 4, 10, 11, 5),
            Block.box(11, 3, 4, 12, 12, 5),
            Block.box(11, 9, 3, 13, 11, 5),
            Block.box(11, 6, 3, 13, 8, 5),
            Block.box(11, 3, 3, 13, 5, 4),
            Block.box(12, 3, 5, 13, 11, 6),
            Block.box(12, 3, 4, 13, 6, 5),
            Block.box(8, 3, 6, 9, 13, 7),
            Block.box(8, 3, 9, 9, 13, 10),
            Block.box(7, 3, 7, 8, 14, 9),
            Block.box(5, 3, 7, 6, 13, 9),
            Block.box(4, 1, 7, 5, 7, 9),
            Block.box(3, 0, 7, 4, 5, 9),
            Block.box(1, 0, 7, 3, 2, 9),
            Block.box(2, 2, 7, 3, 3, 9),
            Block.box(1.5, 2, 7.375, 2.75, 10, 8.625),
            Block.box(1.25, 9.25, 7.5, 2.25, 10.25, 8.5),
            Block.box(0.25, 9.5, 7.5, 1.75, 10.5, 8.5),
            Block.box(3.5, 9.125, 7.5, 5, 10.125, 8.5),
            Block.box(3.25, 8.875, 7.25, 5, 9.875, 8.25),
            Block.box(4.25, 8.875, 7.75, 5.25, 9.875, 8.75),
            Block.box(4, 8.625, 7.5, 5, 9.625, 8.5),
            Block.box(1.625, 2, 7.75, 2.625, 6.25, 8.75),
            Block.box(1.625, 2, 7.25, 2.625, 7.25, 8.25),
            Block.box(1.375, 2, 7.5, 2.375, 4.25, 8.5),
            Block.box(1.375, 8, 7.5, 2.375, 9.25, 8.5),
            Block.box(1.875, 3, 7.5, 2.875, 8.25, 8.5),
            Block.box(2.75, 8.75, 7.375, 5, 10, 8.625),
            Block.box(6, 3, 7, 7, 14, 9),
            Block.box(12, 3, 6, 13, 13, 10),
            Block.box(13, 7, 6, 14, 11, 10),
            Block.box(13, 4, 7, 14, 7, 9),
            Block.box(12, 2, 6, 13, 3, 10),
            Block.box(11, 1, 6, 12, 2, 10),
            Block.box(10, 0, 7, 11, 1, 9),
            Block.box(4, 1, 5, 7, 2, 6),
            Block.box(7, 1, 4, 10, 2, 5),
            Block.box(7, 0, 5, 9, 1, 6),
            Block.box(9, 1, 5, 10, 2, 6),
            Block.box(7, 2, 4, 11, 3, 5),
            Block.box(5, 2, 5, 8, 3, 6),
            Block.box(5, 3, 5, 6, 10, 6),
            Block.box(6, 2, 4, 7, 5, 5),
            Block.box(4, 3, 6, 5, 4, 7),
            Block.box(4, 1, 6, 5, 3, 7),
            Block.box(3, 0, 6, 4, 1, 7),
            Block.box(9, 3, 10, 12, 13, 11),
            Block.box(8, 3, 10, 9, 13, 11),
            Block.box(7, 3, 10, 8, 12, 11),
            Block.box(8, 3, 11, 11, 9, 12),
            Block.box(10, 9, 11, 11, 12, 12),
            Block.box(9, 9, 11, 10, 11, 12),
            Block.box(11, 3, 11, 12, 12, 12),
            Block.box(12, 3, 10, 13, 11, 11),
            Block.box(12, 3, 11, 13, 6, 12),
            Block.box(6, 3, 10, 7, 12, 11),
            Block.box(7, 3, 11, 8, 7, 12),
            Block.box(11, 9, 11, 13, 11, 13),
            Block.box(11, 6, 11, 13, 8, 13),
            Block.box(11, 3, 12, 13, 5, 13),
            Block.box(11, 2, 4, 12, 3, 12),
            Block.box(10, 1, 5, 11, 2, 11),
            Block.box(4, 1, 10, 7, 2, 11),
            Block.box(7, 1, 11, 10, 2, 12),
            Block.box(7, 2, 11, 11, 3, 12),
            Block.box(5, 2, 10, 8, 3, 11),
            Block.box(5, 3, 10, 6, 10, 11),
            Block.box(6, 2, 11, 7, 5, 12),
            Block.box(7, 0, 10, 9, 1, 11),
            Block.box(9, 1, 10, 10, 2, 11),
            Block.box(7, 3, 9, 8, 13, 10),
            Block.box(6, 3, 9, 7, 13, 10),
            Block.box(5, 3, 9, 6, 12, 10),
            Block.box(4, 3, 9, 5, 4, 10),
            Block.box(4, 1, 9, 5, 3, 10),
            Block.box(3, 0, 9, 4, 1, 10),
            Block.box(4, 0, 6, 10, 1, 10),
            Block.box(8, 8, 5.9, 12.1, 15, 10.1),
            Block.box(7, 13, 6.9, 11, 16, 10),
            Block.box(7.9, 12.1, 4.9, 11, 15, 11.1)
        );


    private static final VoxelShape SHAPE_E =  Shapes.or(
            Block.box(10, 3, 9, 11, 13, 12),
            Block.box(10, 3, 8, 11, 13, 9),
            Block.box(9, 3, 7, 10, 13, 8),
            Block.box(9, 3, 6, 10, 13, 7),
            Block.box(9, 3, 5, 10, 12, 6),
            Block.box(10, 3, 6, 11, 12, 7),
            Block.box(11, 3, 7, 12, 7, 8),
            Block.box(10, 3, 7, 11, 12, 8),
            Block.box(11, 3, 8, 12, 9, 11),
            Block.box(11, 9, 10, 12, 12, 11),
            Block.box(11, 9, 9, 12, 11, 10),
            Block.box(11, 3, 11, 12, 12, 12),
            Block.box(11, 9, 11, 13, 11, 13),
            Block.box(11, 6, 11, 13, 8, 13),
            Block.box(12, 3, 11, 13, 5, 13),
            Block.box(10, 3, 12, 11, 11, 13),
            Block.box(11, 3, 12, 12, 6, 13),
            Block.box(9, 3, 8, 10, 13, 9),
            Block.box(6, 3, 8, 7, 13, 9),
            Block.box(7, 3, 7, 9, 14, 8),
            Block.box(7, 3, 5, 9, 13, 6),
            Block.box(7, 1, 4, 9, 7, 5),
            Block.box(7, 0, 3, 9, 5, 4),
            Block.box(7, 0, 1, 9, 2, 3),
            Block.box(7, 2, 2, 9, 3, 3),
            Block.box(7.375, 2, 1.5, 8.625, 10, 2.75),
            Block.box(7.5, 9.25, 1.25, 8.5, 10.25, 2.25),
            Block.box(7.5, 9.5, 0.25, 8.5, 10.5, 1.75),
            Block.box(7.5, 9.125, 3.5, 8.5, 10.125, 5),
            Block.box(7.75, 8.875, 3.25, 8.75, 9.875, 5),
            Block.box(7.25, 8.875, 4.25, 8.25, 9.875, 5.25),
            Block.box(7.5, 8.625, 4, 8.5, 9.625, 5),
            Block.box(7.25, 2, 1.625, 8.25, 6.25, 2.625),
            Block.box(7.75, 2, 1.625, 8.75, 7.25, 2.625),
            Block.box(7.5, 2, 1.375, 8.5, 4.25, 2.375),
            Block.box(7.5, 8, 1.375, 8.5, 9.25, 2.375),
            Block.box(7.5, 3, 1.875, 8.5, 8.25, 2.875),
            Block.box(7.375, 8.75, 2.75, 8.625, 10, 5),
            Block.box(7, 3, 6, 9, 14, 7),
            Block.box(6, 3, 12, 10, 13, 13),
            Block.box(6, 7, 13, 10, 11, 14),
            Block.box(7, 4, 13, 9, 7, 14),
            Block.box(6, 2, 12, 10, 3, 13),
            Block.box(6, 1, 11, 10, 2, 12),
            Block.box(7, 0, 10, 9, 1, 11),
            Block.box(10, 1, 4, 11, 2, 7),
            Block.box(11, 1, 7, 12, 2, 10),
            Block.box(10, 0, 7, 11, 1, 9),
            Block.box(10, 1, 9, 11, 2, 10),
            Block.box(11, 2, 7, 12, 3, 11),
            Block.box(10, 2, 5, 11, 3, 8),
            Block.box(10, 3, 5, 11, 10, 6),
            Block.box(11, 2, 6, 12, 5, 7),
            Block.box(9, 3, 4, 10, 4, 5),
            Block.box(9, 1, 4, 10, 3, 5),
            Block.box(9, 0, 3, 10, 1, 4),
            Block.box(5, 3, 9, 6, 13, 12),
            Block.box(5, 3, 8, 6, 13, 9),
            Block.box(5, 3, 7, 6, 12, 8),
            Block.box(4, 3, 8, 5, 9, 11),
            Block.box(4, 9, 10, 5, 12, 11),
            Block.box(4, 9, 9, 5, 11, 10),
            Block.box(4, 3, 11, 5, 12, 12),
            Block.box(5, 3, 12, 6, 11, 13),
            Block.box(4, 3, 12, 5, 6, 13),
            Block.box(5, 3, 6, 6, 12, 7),
            Block.box(4, 3, 7, 5, 7, 8),
            Block.box(3, 9, 11, 5, 11, 13),
            Block.box(3, 6, 11, 5, 8, 13),
            Block.box(3, 3, 11, 4, 5, 13),
            Block.box(4, 2, 11, 12, 3, 12),
            Block.box(5, 1, 10, 11, 2, 11),
            Block.box(5, 1, 4, 6, 2, 7),
            Block.box(4, 1, 7, 5, 2, 10),
            Block.box(4, 2, 7, 5, 3, 11),
            Block.box(5, 2, 5, 6, 3, 8),
            Block.box(5, 3, 5, 6, 10, 6),
            Block.box(4, 2, 6, 5, 5, 7),
            Block.box(5, 0, 7, 6, 1, 9),
            Block.box(5, 1, 9, 6, 2, 10),
            Block.box(6, 3, 7, 7, 13, 8),
            Block.box(6, 3, 6, 7, 13, 7),
            Block.box(6, 3, 5, 7, 12, 6),
            Block.box(6, 3, 4, 7, 4, 5),
            Block.box(6, 1, 4, 7, 3, 5),
            Block.box(6, 0, 3, 7, 1, 4),
            Block.box(6, 0, 4, 10, 1, 10),
            Block.box(5.9, 8, 8, 10.1, 15, 12.1),
            Block.box(6, 13, 7, 9.1, 16, 11),
            Block.box(4.9, 12.1, 7.9, 11.1, 15, 11)
        );

    @Override
    public VoxelShape getShape(BlockState state, BlockGetter p_60556_, BlockPos p_60557_, CollisionContext p_60558_) {
        switch (state.getValue(FACING))
        {
            case NORTH:
                return SHAPE_N;

            case EAST:
                return SHAPE_E;

            case WEST:
                return SHAPE_W;

            case SOUTH:
                return SHAPE_S;

            default:
                return SHAPE_N;
        }
    }
}
