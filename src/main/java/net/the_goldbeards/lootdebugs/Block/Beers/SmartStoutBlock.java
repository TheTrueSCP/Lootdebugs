package net.the_goldbeards.lootdebugs.Block.Beers;



import net.minecraft.core.BlockPos;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;
import net.the_goldbeards.lootdebugs.Block.BasicRotatableBlock;

public class SmartStoutBlock extends BasicRotatableBlock
{
    public SmartStoutBlock(Properties properties)
    {
        super(properties);
    }

    private static final VoxelShape SHAPE_N = Shapes.or(
            Block.box(1.8622950819672148, 0.75, 7.196721311475411, 3.362295081967215, 6.25, 8.696721311475411),
            Block.box(1.7622950819672152, 0.6499999999999999, 7.096721311475411, 3.4622950819672145, 1.75, 8.79672131147541),
            Block.box(1.7622950819672152, 5.25, 7.096721311475411, 3.4622950819672145, 6.35, 8.79672131147541),
            Block.box(2.112295081967215, 6.35, 7.446721311475411, 3.112295081967215, 7.35, 8.446721311475411),
            Block.box(3.4622950819672145, 5.3, 7.446721311475411, 4.862295081967215, 6.3, 8.446721311475411),
            Block.box(5.159119768172381, 0, 6.7165981830836525, 6.159119768172381, 7.25, 8.716598183083653),
            Block.box(10.159119768172381, 0, 6.7165981830836525, 11.159119768172381, 7.25, 8.716598183083653),
            Block.box(10.159119768172381, 6.2, 6.616598183083653, 11.259119768172383, 7.3, 8.816598183083652),
            Block.box(6.762295081967215, 6.2, 10.196721311475411, 8.962295081967214, 7.3, 11.29672131147541),
            Block.box(4.762295081967215, 6.2, 7.096721311475411, 5.862295081967215, 7.3, 9.29672131147541),
            Block.box(7.059119768172383, 6.2, 9.716598183083653, 9.259119768172383, 7.3, 10.816598183083652),
            Block.box(6.762295081967215, 6.2, 5.096721311475411, 8.962295081967214, 7.3, 6.196721311475411),
            Block.box(5.059119768172382, 6.2, 6.616598183083653, 6.159119768172381, 7.3, 8.816598183083652),
            Block.box(9.862295081967215, 6.2, 7.096721311475411, 10.962295081967214, 7.3, 9.29672131147541),
            Block.box(7.059119768172383, 6.2, 4.616598183083653, 9.259119768172383, 7.3, 5.7165981830836525),
            Block.box(7.159119768172381, 0, 9.716598183083653, 9.159119768172381, 7.25, 10.716598183083653),
            Block.box(7.159119768172381, 0, 4.7165981830836525, 9.159119768172381, 7.25, 5.7165981830836525),
            Block.box(6.862295081967215, 0, 10.196721311475411, 8.862295081967215, 7.25, 11.196721311475411),
            Block.box(6.862295081967215, 0, 5.196721311475411, 8.862295081967215, 7.25, 6.196721311475411),
            Block.box(9.862295081967215, 0, 7.196721311475411, 10.862295081967215, 7.25, 9.196721311475411),
            Block.box(4.862295081967215, 0, 7.196721311475411, 5.862295081967215, 7.25, 9.196721311475411),
            Block.box(5.862295081967215, 0.10000000000000009, 6.196721311475411, 9.862295081967215, 1.1, 10.196721311475411),
            Block.box(6.7122950819672145, 1, 5.046721311475411, 9.012295081967215, 6, 6.046721311475411),
            Block.box(6.562295081967214, 2, 4.89672131147541, 9.162295081967216, 5, 5.89672131147541),
            Block.box(7.362295081967215, 4.1, 4.096721311475411, 8.362295081967215, 5.1, 5.096721311475411),
            Block.box(7.362295081967215, 2.25, 4.346721311475411, 8.362295081967215, 3.25, 5.346721311475411),
            Block.box(5.4122950819672155, 3.85, 4.846721311475411, 6.9122950819672155, 5.35, 6.246721311475412),
            Block.box(5.6622950819672155, 4.1, 4.746721311475412, 6.6622950819672155, 5.1, 5.746721311475412),
            Block.box(9.062295081967214, 4.1, 4.746721311475412, 10.062295081967214, 5.1, 5.746721311475412),
            Block.box(8.812295081967214, 3.85, 4.846721311475411, 10.312295081967214, 5.35, 6.246721311475412),
            Block.box(9.61291001363766, 2, 7.026332882926479, 10.61291001363766, 5, 9.62633288292648),
            Block.box(9.46291001363766, 1, 7.176332882926481, 10.46291001363766, 6, 9.476332882926481),
            Block.box(10.459119768172382, 2, 6.416598183083652, 11.459119768172382, 5, 9.016598183083651),
            Block.box(10.309119768172383, 1, 6.566598183083652, 11.309119768172383, 6, 8.866598183083653),
            Block.box(10.012295081967215, 1, 7.046721311475411, 11.012295081967215, 6, 9.346721311475411),
            Block.box(10.162295081967216, 2, 6.89672131147541, 11.162295081967216, 5, 9.496721311475412),
            Block.box(4.859119768172381, 2, 6.416598183083652, 5.859119768172381, 5, 9.016598183083651),
            Block.box(5.009119768172381, 1, 6.566598183083652, 6.009119768172381, 6, 8.866598183083653),
            Block.box(4.7122950819672145, 1, 7.046721311475411, 5.7122950819672145, 6, 9.346721311475411),
            Block.box(4.562295081967214, 2, 6.89672131147541, 5.562295081967214, 5, 9.496721311475412),
            Block.box(4.312295081967214, 4.1, 4.096721311475411, 5.312295081967214, 5.1, 9.89672131147541),
            Block.box(10.312295081967214, 4.1, 4.096721311475411, 11.312295081967214, 5.1, 9.89672131147541),
            Block.box(4.6622950819672155, 3.1, 4.096721311475411, 7.6622950819672155, 6.1, 4.096721311475411),
            Block.box(8.062295081967214, 3.1, 4.096721311475411, 11.062295081967214, 6.1, 4.096721311475411),
            Block.box(6.859119768172381, 2, 10.016598183083651, 9.459119768172382, 5, 11.016598183083651),
            Block.box(7.009119768172383, 1, 9.866598183083653, 9.309119768172383, 6, 10.866598183083653),
            Block.box(6.562295081967214, 2, 10.496721311475412, 9.162295081967216, 5, 11.496721311475412),
            Block.box(6.7122950819672145, 1, 10.346721311475411, 9.012295081967215, 6, 11.346721311475411),
            Block.box(4.862295081967215, 7, 6.196721311475411, 8.862295081967215, 9, 9.196721311475411),
            Block.box(5.862295081967215, 5, 5.196721311475411, 8.862295081967215, 8, 11.196721311475411),
            Block.box(7.362295081967215, 0.5, 4.846721311475411, 8.362295081967215, 1.5, 5.846721311475411),
            Block.box(6.6622950819672155, 0.5, 10.54672131147541, 9.062295081967214, 1.5, 11.54672131147541),
            Block.box(6.959119768172382, 0.5, 10.066598183083652, 9.35911976817238, 1.5, 11.066598183083652),
            Block.box(4.809119768172382, 0.5, 6.516598183083653, 5.809119768172382, 1.5, 8.916598183083654),
            Block.box(4.512295081967215, 0.5, 6.996721311475412, 5.512295081967215, 1.5, 9.39672131147541),
            Block.box(10.509119768172383, 0.5, 6.516598183083653, 11.509119768172383, 1.5, 8.916598183083654),
            Block.box(10.212295081967214, 0.5, 6.996721311475412, 11.212295081967214, 1.5, 9.39672131147541),
            Block.box(6.959119768172382, 0.5, 4.366598183083653, 9.35911976817238, 1.5, 5.366598183083653),
            Block.box(5.862295081967215, 0.25, 4.696721311475411, 7.362295081967215, 1.75, 5.696721311475411),
            Block.box(8.362295081967215, 0.25, 4.696721311475411, 9.862295081967215, 1.75, 5.696721311475411),
            Block.box(5.862295081967215, 1, 6.196721311475411, 9.862295081967215, 8, 10.196721311475411)
    );

    private static final VoxelShape SHAPE_E = Shapes.or(
            Block.box(7.332786885245902, 0.75, 2.029508196721313, 8.832786885245902, 6.25, 3.529508196721313),
            Block.box(7.232786885245902, 0.6499999999999999, 1.9295081967213132, 8.932786885245902, 1.75, 3.6295081967213125),
            Block.box(7.232786885245902, 5.25, 1.9295081967213132, 8.932786885245902, 6.35, 3.6295081967213125),
            Block.box(7.582786885245902, 6.35, 2.279508196721313, 8.582786885245902, 7.35, 3.279508196721313),
            Block.box(7.582786885245902, 5.3, 3.6295081967213125, 8.582786885245902, 6.3, 5.029508196721313),
            Block.box(7.31291001363766, 0, 5.326332882926479, 9.31291001363766, 7.25, 6.326332882926479),
            Block.box(7.31291001363766, 0, 10.32633288292648, 9.31291001363766, 7.25, 11.32633288292648),
            Block.box(7.212910013637661, 6.2, 10.32633288292648, 9.41291001363766, 7.3, 11.42633288292648),
            Block.box(4.732786885245902, 6.2, 6.929508196721313, 5.832786885245902, 7.3, 9.129508196721313),
            Block.box(6.732786885245902, 6.2, 4.929508196721313, 8.932786885245902, 7.3, 6.029508196721313),
            Block.box(5.212910013637661, 6.2, 7.2263328829264815, 6.31291001363766, 7.3, 9.42633288292648),
            Block.box(9.832786885245902, 6.2, 6.929508196721313, 10.932786885245902, 7.3, 9.129508196721313),
            Block.box(7.212910013637661, 6.2, 5.22633288292648, 9.41291001363766, 7.3, 6.326332882926479),
            Block.box(6.732786885245902, 6.2, 10.029508196721313, 8.932786885245902, 7.3, 11.129508196721313),
            Block.box(10.31291001363766, 6.2, 7.2263328829264815, 11.41291001363766, 7.3, 9.42633288292648),
            Block.box(5.31291001363766, 0, 7.326332882926479, 6.31291001363766, 7.25, 9.32633288292648),
            Block.box(10.31291001363766, 0, 7.326332882926479, 11.31291001363766, 7.25, 9.32633288292648),
            Block.box(4.832786885245902, 0, 7.029508196721313, 5.832786885245902, 7.25, 9.029508196721313),
            Block.box(9.832786885245902, 0, 7.029508196721313, 10.832786885245902, 7.25, 9.029508196721313),
            Block.box(6.832786885245902, 0, 10.029508196721313, 8.832786885245902, 7.25, 11.029508196721313),
            Block.box(6.832786885245902, 0, 5.029508196721313, 8.832786885245902, 7.25, 6.029508196721313),
            Block.box(5.832786885245902, 0.10000000000000009, 6.029508196721313, 9.832786885245902, 1.1, 10.029508196721313),
            Block.box(9.982786885245902, 1, 6.8795081967213125, 10.982786885245902, 6, 9.179508196721313),
            Block.box(10.132786885245903, 2, 6.729508196721312, 11.132786885245903, 5, 9.329508196721314),
            Block.box(10.932786885245902, 4.1, 7.529508196721313, 11.932786885245902, 5.1, 8.529508196721313),
            Block.box(10.682786885245902, 2.25, 7.529508196721313, 11.682786885245902, 3.25, 8.529508196721313),
            Block.box(9.782786885245901, 3.85, 5.579508196721314, 11.182786885245902, 5.35, 7.079508196721314),
            Block.box(10.282786885245901, 4.1, 5.829508196721314, 11.282786885245901, 5.1, 6.829508196721314),
            Block.box(10.282786885245901, 4.1, 9.229508196721312, 11.282786885245901, 5.1, 10.229508196721312),
            Block.box(9.782786885245901, 3.85, 8.979508196721312, 11.182786885245902, 5.35, 10.479508196721312),
            Block.box(6.403175313794833, 2, 9.780123128391757, 9.003175313794834, 5, 10.780123128391757),
            Block.box(6.553175313794831, 1, 9.630123128391759, 8.853175313794832, 6, 10.630123128391759),
            Block.box(7.012910013637661, 2, 10.62633288292648, 9.612910013637661, 5, 11.62633288292648),
            Block.box(7.16291001363766, 1, 10.476332882926481, 9.46291001363766, 6, 11.476332882926481),
            Block.box(6.682786885245902, 1, 10.179508196721313, 8.982786885245902, 6, 11.179508196721313),
            Block.box(6.532786885245901, 2, 10.329508196721314, 9.132786885245903, 5, 11.329508196721314),
            Block.box(7.012910013637661, 2, 5.026332882926479, 9.612910013637661, 5, 6.026332882926479),
            Block.box(7.16291001363766, 1, 5.176332882926479, 9.46291001363766, 6, 6.176332882926479),
            Block.box(6.682786885245902, 1, 4.8795081967213125, 8.982786885245902, 6, 5.8795081967213125),
            Block.box(6.532786885245901, 2, 4.729508196721312, 9.132786885245903, 5, 5.729508196721312),
            Block.box(6.132786885245903, 4.1, 4.479508196721312, 11.932786885245902, 5.1, 5.479508196721312),
            Block.box(6.132786885245903, 4.1, 10.479508196721312, 11.932786885245902, 5.1, 11.479508196721312),
            Block.box(11.932786885245902, 3.1, 4.829508196721314, 11.932786885245902, 6.1, 7.829508196721314),
            Block.box(11.932786885245902, 3.1, 8.229508196721312, 11.932786885245902, 6.1, 11.229508196721312),
            Block.box(5.012910013637661, 2, 7.026332882926479, 6.012910013637661, 5, 9.62633288292648),
            Block.box(5.16291001363766, 1, 7.176332882926481, 6.16291001363766, 6, 9.476332882926481),
            Block.box(4.532786885245901, 2, 6.729508196721312, 5.532786885245901, 5, 9.329508196721314),
            Block.box(4.682786885245902, 1, 6.8795081967213125, 5.682786885245902, 6, 9.179508196721313),
            Block.box(6.832786885245902, 7, 5.029508196721313, 9.832786885245902, 9, 9.029508196721313),
            Block.box(4.832786885245902, 5, 6.029508196721313, 10.832786885245902, 8, 9.029508196721313),
            Block.box(10.182786885245902, 0.5, 7.529508196721313, 11.182786885245902, 1.5, 8.529508196721313),
            Block.box(4.482786885245902, 0.5, 6.829508196721314, 5.482786885245902, 1.5, 9.229508196721312),
            Block.box(4.962910013637661, 0.5, 7.12633288292648, 5.962910013637661, 1.5, 9.526332882926479),
            Block.box(7.112910013637659, 0.5, 4.97633288292648, 9.51291001363766, 1.5, 5.97633288292648),
            Block.box(6.632786885245903, 0.5, 4.679508196721313, 9.032786885245901, 1.5, 5.679508196721313),
            Block.box(7.112910013637659, 0.5, 10.67633288292648, 9.51291001363766, 1.5, 11.67633288292648),
            Block.box(6.632786885245903, 0.5, 10.379508196721313, 9.032786885245901, 1.5, 11.379508196721313),
            Block.box(10.66291001363766, 0.5, 7.12633288292648, 11.66291001363766, 1.5, 9.526332882926479),
            Block.box(10.332786885245902, 0.25, 6.029508196721313, 11.332786885245902, 1.75, 7.529508196721313),
            Block.box(10.332786885245902, 0.25, 8.529508196721313, 11.332786885245902, 1.75, 10.029508196721313),
            Block.box(5.832786885245902, 1, 6.029508196721313, 9.832786885245902, 8, 10.029508196721313)
    );

    private static final VoxelShape SHAPE_S = Shapes.or(
            Block.box(12.5, 0.75, 7.5, 14, 6.25, 9),
            Block.box(12.4, 0.65, 7.4, 14.1, 1.75, 9.1),
            Block.box(12.4, 5.25, 7.4, 14.1, 6.35, 9.1),
            Block.box(12.75, 6.35, 7.75, 13.75, 7.35, 8.75),
            Block.box(11, 5.3, 7.75, 12.4, 6.3, 8.75),
            Block.box(10, 0, 7, 11, 7.25, 9),
            Block.box(5, 0, 7, 6, 7.25, 9),
            Block.box(4.9, 6.2, 6.9, 6, 7.3, 9.1),
            Block.box(6.9, 6.2, 4.9, 9.1, 7.3, 6),
            Block.box(10, 6.2, 6.9, 11.1, 7.3, 9.1),
            Block.box(6.9, 6.2, 4.9, 9.1, 7.3, 6),
            Block.box(6.9, 6.2, 10, 9.1, 7.3, 11.1),
            Block.box(10, 6.2, 6.9, 11.1, 7.3, 9.1),
            Block.box(4.9, 6.2, 6.9, 6, 7.3, 9.1),
            Block.box(6.9, 6.2, 10, 9.1, 7.3, 11.1),
            Block.box(7, 0, 5, 9, 7.25, 6),
            Block.box(7, 0, 10, 9, 7.25, 11),
            Block.box(7, 0, 5, 9, 7.25, 6),
            Block.box(7, 0, 10, 9, 7.25, 11),
            Block.box(5, 0, 7, 6, 7.25, 9),
            Block.box(10, 0, 7, 11, 7.25, 9),
            Block.box(6, 0.1, 6, 10, 1.1, 10),
            Block.box(6.85, 1, 10.15, 9.15, 6, 11.15),
            Block.box(6.7, 2, 10.3, 9.3, 5, 11.3),
            Block.box(7.5, 4.1, 11.1, 8.5, 5.1, 12.1),
            Block.box(7.5, 2.25, 10.85, 8.5, 3.25, 11.85),
            Block.box(8.95, 3.85, 9.95, 10.45, 5.35, 11.35),
            Block.box(9.2, 4.1, 10.45, 10.2, 5.1, 11.45),
            Block.box(5.8, 4.1, 10.45, 6.8, 5.1, 11.45),
            Block.box(5.55, 3.85, 9.95, 7.05, 5.35, 11.35),
            Block.box(4.7, 2, 6.7, 5.7, 5, 9.3),
            Block.box(4.85, 1, 6.85, 5.85, 6, 9.15),
            Block.box(4.7, 2, 6.7, 5.7, 5, 9.3),
            Block.box(4.85, 1, 6.85, 5.85, 6, 9.15),
            Block.box(4.85, 1, 6.85, 5.85, 6, 9.15),
            Block.box(4.7, 2, 6.7, 5.7, 5, 9.3),
            Block.box(10.3, 2, 6.7, 11.3, 5, 9.3),
            Block.box(10.15, 1, 6.85, 11.15, 6, 9.15),
            Block.box(10.15, 1, 6.85, 11.15, 6, 9.15),
            Block.box(10.3, 2, 6.7, 11.3, 5, 9.3),
            Block.box(10.55, 4.1, 6.3, 11.55, 5.1, 12.1),
            Block.box(4.55, 4.1, 6.3, 5.55, 5.1, 12.1),
            Block.box(8.2, 3.1, 12.1, 11.2, 6.1, 12.1),
            Block.box(4.8, 3.1, 12.1, 7.8, 6.1, 12.1),
            Block.box(6.7, 2, 4.7, 9.3, 5, 5.7),
            Block.box(6.85, 1, 4.85, 9.15, 6, 5.85),
            Block.box(6.7, 2, 4.7, 9.3, 5, 5.7),
            Block.box(6.85, 1, 4.85, 9.15, 6, 5.85),
            Block.box(7, 7, 7, 11, 9, 10),
            Block.box(7, 5, 5, 10, 8, 11),
            Block.box(7.5, 0.5, 10.35, 8.5, 1.5, 11.35),
            Block.box(6.8, 0.5, 4.65, 9.2, 1.5, 5.65),
            Block.box(6.8, 0.5, 4.65, 9.2, 1.5, 5.65),
            Block.box(10.35, 0.5, 6.8, 11.35, 1.5, 9.2),
            Block.box(10.35, 0.5, 6.8, 11.35, 1.5, 9.2),
            Block.box(4.65, 0.5, 6.8, 5.65, 1.5, 9.2),
            Block.box(4.65, 0.5, 6.8, 5.65, 1.5, 9.2),
            Block.box(6.8, 0.5, 10.35, 9.2, 1.5, 11.35),
            Block.box(8.5, 0.25, 10.5, 10, 1.75, 11.5),
            Block.box(6, 0.25, 10.5, 7.5, 1.75, 11.5),
            Block.box(6, 1, 6, 10, 8, 10)
    );




    private static final VoxelShape SHAPE_W = Shapes.or(
            Block.box(7.029508196721313, 0.75, 12.667213114754098, 8.529508196721313, 6.25, 14.167213114754098),
            Block.box(6.929508196721313, 0.6499999999999999, 12.567213114754098, 8.629508196721313, 1.75, 14.267213114754098),
            Block.box(6.929508196721313, 5.25, 12.567213114754098, 8.629508196721313, 6.35, 14.267213114754098),
            Block.box(7.279508196721313, 6.35, 12.917213114754098, 8.279508196721313, 7.35, 13.917213114754098),
            Block.box(7.279508196721313, 5.3, 11.167213114754098, 8.279508196721313, 6.3, 12.567213114754098),
            Block.box(6.5493850683295545, 0, 9.870388428548932, 8.549385068329554, 7.25, 10.870388428548932),
            Block.box(6.5493850683295545, 0, 4.870388428548931, 8.549385068329554, 7.25, 5.870388428548931),
            Block.box(6.449385068329555, 6.2, 4.770388428548931, 8.649385068329554, 7.3, 5.870388428548931),
            Block.box(10.029508196721313, 6.2, 7.067213114754098, 11.129508196721313, 7.3, 9.267213114754098),
            Block.box(6.929508196721313, 6.2, 10.167213114754098, 9.129508196721313, 7.3, 11.267213114754098),
            Block.box(9.549385068329554, 6.2, 6.77038842854893, 10.649385068329554, 7.3, 8.97038842854893),
            Block.box(4.929508196721313, 6.2, 7.067213114754098, 6.029508196721313, 7.3, 9.267213114754098),
            Block.box(6.449385068329555, 6.2, 9.870388428548932, 8.649385068329554, 7.3, 10.970388428548931),
            Block.box(6.929508196721313, 6.2, 5.067213114754098, 9.129508196721313, 7.3, 6.167213114754098),
            Block.box(4.449385068329555, 6.2, 6.77038842854893, 5.5493850683295545, 7.3, 8.97038842854893),
            Block.box(9.549385068329554, 0, 6.870388428548932, 10.549385068329554, 7.25, 8.870388428548932),
            Block.box(4.5493850683295545, 0, 6.870388428548932, 5.5493850683295545, 7.25, 8.870388428548932),
            Block.box(10.029508196721313, 0, 7.167213114754098, 11.029508196721313, 7.25, 9.167213114754098),
            Block.box(5.029508196721313, 0, 7.167213114754098, 6.029508196721313, 7.25, 9.167213114754098),
            Block.box(7.029508196721313, 0, 5.167213114754098, 9.029508196721313, 7.25, 6.167213114754098),
            Block.box(7.029508196721313, 0, 10.167213114754098, 9.029508196721313, 7.25, 11.167213114754098),
            Block.box(6.029508196721313, 0.10000000000000009, 6.167213114754098, 10.029508196721313, 1.1, 10.167213114754098),
            Block.box(4.8795081967213125, 1, 7.017213114754098, 5.8795081967213125, 6, 9.317213114754098),
            Block.box(4.729508196721312, 2, 6.867213114754098, 5.729508196721312, 5, 9.467213114754099),
            Block.box(3.9295081967213132, 4.1, 7.667213114754098, 4.929508196721313, 5.1, 8.667213114754098),
            Block.box(4.179508196721313, 2.25, 7.667213114754098, 5.179508196721313, 3.25, 8.667213114754098),
            Block.box(4.679508196721313, 3.85, 9.117213114754097, 6.079508196721314, 5.35, 10.617213114754097),
            Block.box(4.579508196721314, 4.1, 9.367213114754097, 5.579508196721314, 5.1, 10.367213114754097),
            Block.box(4.579508196721314, 4.1, 5.967213114754098, 5.579508196721314, 5.1, 6.967213114754098),
            Block.box(4.679508196721313, 3.85, 5.717213114754098, 6.079508196721314, 5.35, 7.217213114754098),
            Block.box(6.859119768172381, 2, 5.416598183083653, 9.459119768172382, 5, 6.416598183083653),
            Block.box(7.009119768172383, 1, 5.566598183083652, 9.309119768172383, 6, 6.566598183083652),
            Block.box(6.249385068329554, 2, 4.570388428548931, 8.849385068329553, 5, 5.570388428548931),
            Block.box(6.399385068329554, 1, 4.72038842854893, 8.699385068329555, 6, 5.72038842854893),
            Block.box(6.8795081967213125, 1, 5.017213114754098, 9.179508196721313, 6, 6.017213114754098),
            Block.box(6.729508196721312, 2, 4.867213114754098, 9.329508196721314, 5, 5.867213114754098),
            Block.box(6.249385068329554, 2, 10.170388428548932, 8.849385068329553, 5, 11.170388428548932),
            Block.box(6.399385068329554, 1, 10.020388428548932, 8.699385068329555, 6, 11.020388428548932),
            Block.box(6.8795081967213125, 1, 10.317213114754098, 9.179508196721313, 6, 11.317213114754098),
            Block.box(6.729508196721312, 2, 10.467213114754099, 9.329508196721314, 5, 11.467213114754099),
            Block.box(3.9295081967213132, 4.1, 10.717213114754099, 9.729508196721312, 5.1, 11.717213114754099),
            Block.box(3.9295081967213132, 4.1, 4.717213114754098, 9.729508196721312, 5.1, 5.717213114754098),
            Block.box(3.9295081967213132, 3.1, 8.367213114754097, 3.9295081967213132, 6.1, 11.367213114754097),
            Block.box(3.9295081967213132, 3.1, 4.967213114754098, 3.9295081967213132, 6.1, 7.967213114754098),
            Block.box(9.849385068329553, 2, 6.570388428548932, 10.849385068329553, 5, 9.170388428548932),
            Block.box(9.699385068329555, 1, 6.7203884285489295, 10.699385068329555, 6, 9.02038842854893),
            Block.box(10.329508196721314, 2, 6.867213114754098, 11.329508196721314, 5, 9.467213114754099),
            Block.box(10.179508196721313, 1, 7.017213114754098, 11.179508196721313, 6, 9.317213114754098),
            Block.box(6.029508196721313, 7, 7.167213114754098, 9.029508196721313, 9, 11.167213114754098),
            Block.box(5.029508196721313, 5, 7.167213114754098, 11.029508196721313, 8, 10.167213114754098),
            Block.box(4.679508196721313, 0.5, 7.667213114754098, 5.679508196721313, 1.5, 8.667213114754098),
            Block.box(10.379508196721313, 0.5, 6.967213114754098, 11.379508196721313, 1.5, 9.367213114754097),
            Block.box(9.899385068329554, 0.5, 6.670388428548931, 10.899385068329554, 1.5, 9.070388428548931),
            Block.box(6.349385068329555, 0.5, 10.220388428548931, 8.749385068329556, 1.5, 11.220388428548931),
            Block.box(6.829508196721314, 0.5, 10.517213114754098, 9.229508196721312, 1.5, 11.517213114754098),
            Block.box(6.349385068329555, 0.5, 4.520388428548931, 8.749385068329556, 1.5, 5.520388428548931),
            Block.box(6.829508196721314, 0.5, 4.817213114754098, 9.229508196721312, 1.5, 5.817213114754098),
            Block.box(4.199385068329555, 0.5, 6.670388428548931, 5.199385068329555, 1.5, 9.070388428548931),
            Block.box(4.529508196721313, 0.25, 8.667213114754098, 5.529508196721313, 1.75, 10.167213114754098),
            Block.box(4.529508196721313, 0.25, 6.167213114754098, 5.529508196721313, 1.75, 7.667213114754098),
            Block.box(6.029508196721313, 1, 6.167213114754098, 10.029508196721313, 8, 10.167213114754098)
    );

    @Override
    public VoxelShape getShape(BlockState state, BlockGetter p_60556_, BlockPos p_60557_, CollisionContext p_60558_) {
        switch (state.getValue(FACING))
        {
            case NORTH:
                return SHAPE_N;

            case EAST:
                return SHAPE_E;

            case WEST:
                return SHAPE_W;

            case SOUTH:
                return SHAPE_S;

            default:
                return SHAPE_N;
        }
    }
}

